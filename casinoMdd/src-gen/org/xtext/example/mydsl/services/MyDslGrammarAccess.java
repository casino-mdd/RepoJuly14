/*
 * generated by Xtext 2.18.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCasinoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDomAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDomDomainParserRuleCall_2_0 = (RuleCall)cDomAssignment_2.eContents().get(0);
		private final Assignment cArchAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArchArchitectureParserRuleCall_3_0 = (RuleCall)cArchAssignment_3.eContents().get(0);
		private final Assignment cTechAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTechTechnologyParserRuleCall_4_0 = (RuleCall)cTechAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////---------------------- System ------------------------------------------------
		//System:
		//	'Casino' '{'
		//	dom=Domain
		//	arch=Architecture
		//	tech=Technology
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Casino' '{' dom=Domain arch=Architecture tech=Technology '}'
		public Group getGroup() { return cGroup; }
		
		//'Casino'
		public Keyword getCasinoKeyword_0() { return cCasinoKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//dom=Domain
		public Assignment getDomAssignment_2() { return cDomAssignment_2; }
		
		//Domain
		public RuleCall getDomDomainParserRuleCall_2_0() { return cDomDomainParserRuleCall_2_0; }
		
		//arch=Architecture
		public Assignment getArchAssignment_3() { return cArchAssignment_3; }
		
		//Architecture
		public RuleCall getArchArchitectureParserRuleCall_3_0() { return cArchArchitectureParserRuleCall_3_0; }
		
		//tech=Technology
		public Assignment getTechAssignment_4() { return cTechAssignment_4; }
		
		//Technology
		public RuleCall getTechTechnologyParserRuleCall_4_0() { return cTechTechnologyParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Domain");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDomainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypesTypeParserRuleCall_2_0 = (RuleCall)cTypesAssignment_2.eContents().get(0);
		private final Assignment cModulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModulesModuleParserRuleCall_3_0 = (RuleCall)cModulesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationDomParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// --------------------- Domain ------------------------------------------------
		//Domain:
		//	'domain' '{'
		//	types+=Type*
		//	modules+=Module+
		//	relations+=RelationDom+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'domain' '{' types+=Type* modules+=Module+ relations+=RelationDom+ '}'
		public Group getGroup() { return cGroup; }
		
		//'domain'
		public Keyword getDomainKeyword_0() { return cDomainKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//types+=Type*
		public Assignment getTypesAssignment_2() { return cTypesAssignment_2; }
		
		//Type
		public RuleCall getTypesTypeParserRuleCall_2_0() { return cTypesTypeParserRuleCall_2_0; }
		
		//modules+=Module+
		public Assignment getModulesAssignment_3() { return cModulesAssignment_3; }
		
		//Module
		public RuleCall getModulesModuleParserRuleCall_3_0() { return cModulesModuleParserRuleCall_3_0; }
		
		//relations+=RelationDom+
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//RelationDom
		public RuleCall getRelationsRelationDomParserRuleCall_4_0() { return cRelationsRelationDomParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Module");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSubmodulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSubmodulesSubmoduleParserRuleCall_3_0 = (RuleCall)cSubmodulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Module:
		//	'module' name=ID '{'
		//	submodules+=Submodule+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=ID '{' submodules+=Submodule+ '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//submodules+=Submodule+
		public Assignment getSubmodulesAssignment_3() { return cSubmodulesAssignment_3; }
		
		//Submodule
		public RuleCall getSubmodulesSubmoduleParserRuleCall_3_0() { return cSubmodulesSubmoduleParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class SubmoduleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Submodule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubmoduleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperationsOperationParserRuleCall_3_0 = (RuleCall)cOperationsAssignment_3.eContents().get(0);
		private final Assignment cEntitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cEntitiesAlternatives_4_0 = (Alternatives)cEntitiesAssignment_4.eContents().get(0);
		private final RuleCall cEntitiesGeneralEntityParserRuleCall_4_0_0 = (RuleCall)cEntitiesAlternatives_4_0.eContents().get(0);
		private final RuleCall cEntitiesSpecialEntityParserRuleCall_4_0_1 = (RuleCall)cEntitiesAlternatives_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Submodule:
		//	'submodule' name=ID '{'
		//	operations+=Operation+
		//	entities+=(GeneralEntity | SpecialEntity)+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'submodule' name=ID '{' operations+=Operation+ entities+=(GeneralEntity | SpecialEntity)+ '}'
		public Group getGroup() { return cGroup; }
		
		//'submodule'
		public Keyword getSubmoduleKeyword_0() { return cSubmoduleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//operations+=Operation+
		public Assignment getOperationsAssignment_3() { return cOperationsAssignment_3; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_3_0() { return cOperationsOperationParserRuleCall_3_0; }
		
		//entities+=(GeneralEntity | SpecialEntity)+
		public Assignment getEntitiesAssignment_4() { return cEntitiesAssignment_4; }
		
		//(GeneralEntity | SpecialEntity)
		public Alternatives getEntitiesAlternatives_4_0() { return cEntitiesAlternatives_4_0; }
		
		//GeneralEntity
		public RuleCall getEntitiesGeneralEntityParserRuleCall_4_0_0() { return cEntitiesGeneralEntityParserRuleCall_4_0_0; }
		
		//SpecialEntity
		public RuleCall getEntitiesSpecialEntityParserRuleCall_4_0_1() { return cEntitiesSpecialEntityParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSubOperationParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cOperates_onKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTargetEntityNameParserRuleCall_5_0 = (RuleCall)cTargetAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Operation:
		//	'op' '{'
		//	'type:' type=SubOperation
		//	'operates_on:' target+=EntityName
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'op' '{' 'type:' type=SubOperation 'operates_on:' target+=EntityName '}'
		public Group getGroup() { return cGroup; }
		
		//'op'
		public Keyword getOpKeyword_0() { return cOpKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type:'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=SubOperation
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//SubOperation
		public RuleCall getTypeSubOperationParserRuleCall_3_0() { return cTypeSubOperationParserRuleCall_3_0; }
		
		//'operates_on:'
		public Keyword getOperates_onKeyword_4() { return cOperates_onKeyword_4; }
		
		//target+=EntityName
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }
		
		//EntityName
		public RuleCall getTargetEntityNameParserRuleCall_5_0() { return cTargetEntityNameParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EntityNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EntityName");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//EntityName:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class SubOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SubOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cReadKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCreateKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SubOperation:
		//	'Read' | 'Create';
		@Override public ParserRule getRule() { return rule; }
		
		//'Read' | 'Create'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Read'
		public Keyword getReadKeyword_0() { return cReadKeyword_0; }
		
		//'Create'
		public Keyword getCreateKeyword_1() { return cCreateKeyword_1; }
	}
	public class GeneralEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.GeneralEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeneralEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEntityNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GeneralEntity:
		//	'generalEntity' name=EntityName '{'
		//	properties+=Property+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'generalEntity' name=EntityName '{' properties+=Property+ '}'
		public Group getGroup() { return cGroup; }
		
		//'generalEntity'
		public Keyword getGeneralEntityKeyword_0() { return cGeneralEntityKeyword_0; }
		
		//name=EntityName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EntityName
		public RuleCall getNameEntityNameParserRuleCall_1_0() { return cNameEntityNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//properties+=Property+
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_3_0() { return cPropertiesPropertyParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		
		//Property:
		//	name=ID ':' type=[Type];
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' type=[Type]
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=[Type]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[Type]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_2_0_1() { return cTypeTypeIDTerminalRuleCall_2_0_1; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Type:
		//	'dataType' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'dataType' name=ID
		public Group getGroup() { return cGroup; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_0() { return cDataTypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class SpecialEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SpecialEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecialEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEntityNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final Assignment cTransactionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTransactionsTransactionParserRuleCall_4_0 = (RuleCall)cTransactionsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SpecialEntity:
		//	'specialEntity' name=EntityName '{'
		//	properties+=Property+
		//	transactions+=Transaction+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'specialEntity' name=EntityName '{' properties+=Property+ transactions+=Transaction+ '}'
		public Group getGroup() { return cGroup; }
		
		//'specialEntity'
		public Keyword getSpecialEntityKeyword_0() { return cSpecialEntityKeyword_0; }
		
		//name=EntityName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EntityName
		public RuleCall getNameEntityNameParserRuleCall_1_0() { return cNameEntityNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//properties+=Property+
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }
		
		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_3_0() { return cPropertiesPropertyParserRuleCall_3_0; }
		
		//transactions+=Transaction+
		public Assignment getTransactionsAssignment_4() { return cTransactionsAssignment_4; }
		
		//Transaction
		public RuleCall getTransactionsTransactionParserRuleCall_4_0() { return cTransactionsTransactionParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Transaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTrxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSubTransactionParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cOperatesonAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOperatesonOperatesonParserRuleCall_4_0 = (RuleCall)cOperatesonAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Transaction:
		//	'trx' '{'
		//	'type:' type=SubTransaction
		//	operateson+=Operateson+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'trx' '{' 'type:' type=SubTransaction operateson+=Operateson+ '}'
		public Group getGroup() { return cGroup; }
		
		//'trx'
		public Keyword getTrxKeyword_0() { return cTrxKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type:'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=SubTransaction
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//SubTransaction
		public RuleCall getTypeSubTransactionParserRuleCall_3_0() { return cTypeSubTransactionParserRuleCall_3_0; }
		
		//operateson+=Operateson+
		public Assignment getOperatesonAssignment_4() { return cOperatesonAssignment_4; }
		
		//Operateson
		public RuleCall getOperatesonOperatesonParserRuleCall_4_0() { return cOperatesonOperatesonParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SubTransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SubTransaction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cExchangeKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSaleKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SubTransaction:
		//	'exchange' | 'sale';
		@Override public ParserRule getRule() { return rule; }
		
		//'exchange' | 'sale'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'exchange'
		public Keyword getExchangeKeyword_0() { return cExchangeKeyword_0; }
		
		//'sale'
		public Keyword getSaleKeyword_1() { return cSaleKeyword_1; }
	}
	public class OperatesonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Operateson");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperates_onKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOperatesonAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatesonEntityNameParserRuleCall_1_0 = (RuleCall)cOperatesonAssignment_1.eContents().get(0);
		
		//Operateson:
		//	'operates_on:' operateson+=EntityName;
		@Override public ParserRule getRule() { return rule; }
		
		//'operates_on:' operateson+=EntityName
		public Group getGroup() { return cGroup; }
		
		//'operates_on:'
		public Keyword getOperates_onKeyword_0() { return cOperates_onKeyword_0; }
		
		//operateson+=EntityName
		public Assignment getOperatesonAssignment_1() { return cOperatesonAssignment_1; }
		
		//EntityName
		public RuleCall getOperatesonEntityNameParserRuleCall_1_0() { return cOperatesonEntityNameParserRuleCall_1_0; }
	}
	public class RelationDomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RelationDom");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCompositionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSourceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSourceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSourceEntityNameParserRuleCall_5_0 = (RuleCall)cSourceAssignment_5.eContents().get(0);
		private final Keyword cTargetKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTargetEntityNameParserRuleCall_7_0 = (RuleCall)cTargetAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//RelationDom:
		//	'rel' '{'
		//	'type:' 'Composition'
		//	'source:' source+=EntityName
		//	'target:' target+=EntityName
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'rel' '{' 'type:' 'Composition' 'source:' source+=EntityName 'target:' target+=EntityName '}'
		public Group getGroup() { return cGroup; }
		
		//'rel'
		public Keyword getRelKeyword_0() { return cRelKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type:'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//'Composition'
		public Keyword getCompositionKeyword_3() { return cCompositionKeyword_3; }
		
		//'source:'
		public Keyword getSourceKeyword_4() { return cSourceKeyword_4; }
		
		//source+=EntityName
		public Assignment getSourceAssignment_5() { return cSourceAssignment_5; }
		
		//EntityName
		public RuleCall getSourceEntityNameParserRuleCall_5_0() { return cSourceEntityNameParserRuleCall_5_0; }
		
		//'target:'
		public Keyword getTargetKeyword_6() { return cTargetKeyword_6; }
		
		//target+=EntityName
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }
		
		//EntityName
		public RuleCall getTargetEntityNameParserRuleCall_7_0() { return cTargetEntityNameParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ArchitectureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Architecture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cComponentesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComponentesComponentParserRuleCall_2_0 = (RuleCall)cComponentesAssignment_2.eContents().get(0);
		private final Assignment cRelationArchAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRelationArchRelationArchParserRuleCall_3_0 = (RuleCall)cRelationArchAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// --------------------- Architecture ----------------------------------------------
		//Architecture:
		//	'arch' '{'
		//	componentes+=Component+
		//	relationArch+=RelationArch+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'arch' '{' componentes+=Component+ relationArch+=RelationArch+ '}'
		public Group getGroup() { return cGroup; }
		
		//'arch'
		public Keyword getArchKeyword_0() { return cArchKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//componentes+=Component+
		public Assignment getComponentesAssignment_2() { return cComponentesAssignment_2; }
		
		//Component
		public RuleCall getComponentesComponentParserRuleCall_2_0() { return cComponentesComponentParserRuleCall_2_0; }
		
		//relationArch+=RelationArch+
		public Assignment getRelationArchAssignment_3() { return cRelationArchAssignment_3; }
		
		//RelationArch
		public RuleCall getRelationArchRelationArchParserRuleCall_3_0() { return cRelationArchRelationArchParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameComponentNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLayerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayerLayerParserRuleCall_3_0 = (RuleCall)cLayerAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Component:
		//	'component' name=ComponentName '{'
		//	layer+=Layer+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'component' name=ComponentName '{' layer+=Layer+ '}'
		public Group getGroup() { return cGroup; }
		
		//'component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=ComponentName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ComponentName
		public RuleCall getNameComponentNameParserRuleCall_1_0() { return cNameComponentNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//layer+=Layer+
		public Assignment getLayerAssignment_3() { return cLayerAssignment_3; }
		
		//Layer
		public RuleCall getLayerLayerParserRuleCall_3_0() { return cLayerLayerParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ComponentNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ComponentName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBackKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFrontKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ComponentName:
		//	'Back' | 'Front';
		@Override public ParserRule getRule() { return rule; }
		
		//'Back' | 'Front'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Back'
		public Keyword getBackKeyword_0() { return cBackKeyword_0; }
		
		//'Front'
		public Keyword getFrontKeyword_1() { return cFrontKeyword_1; }
	}
	public class LayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Layer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLayerNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLayerSegmentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayerSegmentsLayerSegmentParserRuleCall_3_0 = (RuleCall)cLayerSegmentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Layer:
		//	'layer' name=LayerName '{'
		//	layerSegments+=LayerSegment*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'layer' name=LayerName '{' layerSegments+=LayerSegment* '}'
		public Group getGroup() { return cGroup; }
		
		//'layer'
		public Keyword getLayerKeyword_0() { return cLayerKeyword_0; }
		
		//name=LayerName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//LayerName
		public RuleCall getNameLayerNameParserRuleCall_1_0() { return cNameLayerNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//layerSegments+=LayerSegment*
		public Assignment getLayerSegmentsAssignment_3() { return cLayerSegmentsAssignment_3; }
		
		//LayerSegment
		public RuleCall getLayerSegmentsLayerSegmentParserRuleCall_3_0() { return cLayerSegmentsLayerSegmentParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LayerNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cJavaScriptKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cEjbKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cWarKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//LayerName:
		//	'JavaScript' | 'Ejb' | 'War';
		@Override public ParserRule getRule() { return rule; }
		
		//'JavaScript' | 'Ejb' | 'War'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'JavaScript'
		public Keyword getJavaScriptKeyword_0() { return cJavaScriptKeyword_0; }
		
		//'Ejb'
		public Keyword getEjbKeyword_1() { return cEjbKeyword_1; }
		
		//'War'
		public Keyword getWarKeyword_2() { return cWarKeyword_2; }
	}
	public class LayerSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerSegmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLayerSegmentNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRelationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRelationsLayerSegmentRelationParserRuleCall_3_1_0 = (RuleCall)cRelationsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cSublayerSegmentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSublayerSegmentsSublayerSegmentParserRuleCall_4_0 = (RuleCall)cSublayerSegmentsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LayerSegment:
		//	'layerSegment' name=LayerSegmentName '{' ('{' relations+=LayerSegmentRelation* '}')?
		//	sublayerSegments+=SublayerSegment*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'layerSegment' name=LayerSegmentName '{' ('{' relations+=LayerSegmentRelation* '}')? sublayerSegments+=SublayerSegment*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'layerSegment'
		public Keyword getLayerSegmentKeyword_0() { return cLayerSegmentKeyword_0; }
		
		//name=LayerSegmentName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//LayerSegmentName
		public RuleCall getNameLayerSegmentNameParserRuleCall_1_0() { return cNameLayerSegmentNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('{' relations+=LayerSegmentRelation* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//relations+=LayerSegmentRelation*
		public Assignment getRelationsAssignment_3_1() { return cRelationsAssignment_3_1; }
		
		//LayerSegmentRelation
		public RuleCall getRelationsLayerSegmentRelationParserRuleCall_3_1_0() { return cRelationsLayerSegmentRelationParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
		
		//sublayerSegments+=SublayerSegment*
		public Assignment getSublayerSegmentsAssignment_4() { return cSublayerSegmentsAssignment_4; }
		
		//SublayerSegment
		public RuleCall getSublayerSegmentsSublayerSegmentParserRuleCall_4_0() { return cSublayerSegmentsSublayerSegmentParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class LayerSegmentRelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerSegmentRelation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllowedToUseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLayerSegmentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLayerSegmentLayerSegmentNameParserRuleCall_1_0 = (RuleCall)cLayerSegmentAssignment_1.eContents().get(0);
		
		//LayerSegmentRelation:
		//	'allowedToUse:' layerSegment=LayerSegmentName;
		@Override public ParserRule getRule() { return rule; }
		
		//'allowedToUse:' layerSegment=LayerSegmentName
		public Group getGroup() { return cGroup; }
		
		//'allowedToUse:'
		public Keyword getAllowedToUseKeyword_0() { return cAllowedToUseKeyword_0; }
		
		//layerSegment=LayerSegmentName
		public Assignment getLayerSegmentAssignment_1() { return cLayerSegmentAssignment_1; }
		
		//LayerSegmentName
		public RuleCall getLayerSegmentLayerSegmentNameParserRuleCall_1_0() { return cLayerSegmentLayerSegmentNameParserRuleCall_1_0; }
	}
	public class LayerSegmentNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerSegmentName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cServicesKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cUiKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStoreKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cRestEntityKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cPojoKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cFacadeKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cDtoKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cUtilKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cContainersKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		
		//LayerSegmentName:
		//	'Services' | 'Ui' | 'Store' | 'RestEntity' | 'Pojo' | 'Facade' | 'Dto' | 'Util' | 'Containers';
		@Override public ParserRule getRule() { return rule; }
		
		//'Services' | 'Ui' | 'Store' | 'RestEntity' | 'Pojo' | 'Facade' | 'Dto' | 'Util' | 'Containers'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Services'
		public Keyword getServicesKeyword_0() { return cServicesKeyword_0; }
		
		//'Ui'
		public Keyword getUiKeyword_1() { return cUiKeyword_1; }
		
		//'Store'
		public Keyword getStoreKeyword_2() { return cStoreKeyword_2; }
		
		//'RestEntity'
		public Keyword getRestEntityKeyword_3() { return cRestEntityKeyword_3; }
		
		//'Pojo'
		public Keyword getPojoKeyword_4() { return cPojoKeyword_4; }
		
		//'Facade'
		public Keyword getFacadeKeyword_5() { return cFacadeKeyword_5; }
		
		//'Dto'
		public Keyword getDtoKeyword_6() { return cDtoKeyword_6; }
		
		//'Util'
		public Keyword getUtilKeyword_7() { return cUtilKeyword_7; }
		
		//'Containers'
		public Keyword getContainersKeyword_8() { return cContainersKeyword_8; }
	}
	public class SublayerSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SublayerSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSublayerSegmentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSublayerSegmentNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//SublayerSegment:
		//	'sublayerSegment' name=SublayerSegmentName;
		@Override public ParserRule getRule() { return rule; }
		
		//'sublayerSegment' name=SublayerSegmentName
		public Group getGroup() { return cGroup; }
		
		//'sublayerSegment'
		public Keyword getSublayerSegmentKeyword_0() { return cSublayerSegmentKeyword_0; }
		
		//name=SublayerSegmentName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//SublayerSegmentName
		public RuleCall getNameSublayerSegmentNameParserRuleCall_1_0() { return cNameSublayerSegmentNameParserRuleCall_1_0; }
	}
	public class SublayerSegmentNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SublayerSegmentName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cActionsKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cReducersKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SublayerSegmentName:
		//	'Actions' | 'Reducers';
		@Override public ParserRule getRule() { return rule; }
		
		//'Actions' | 'Reducers'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Actions'
		public Keyword getActionsKeyword_0() { return cActionsKeyword_0; }
		
		//'Reducers'
		public Keyword getReducersKeyword_1() { return cReducersKeyword_1; }
	}
	public class RelationArchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RelationArch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationArchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceLayerNameParserRuleCall_4_0 = (RuleCall)cSourceAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTargetKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTargetLayerNameParserRuleCall_7_0 = (RuleCall)cTargetAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//RelationArch:
		//	'relationArch' name=ID '{'
		//	'source:' source=LayerName ','
		//	'target:' target=LayerName
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'relationArch' name=ID '{' 'source:' source=LayerName ',' 'target:' target=LayerName '}'
		public Group getGroup() { return cGroup; }
		
		//'relationArch'
		public Keyword getRelationArchKeyword_0() { return cRelationArchKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'source:'
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }
		
		//source=LayerName
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }
		
		//LayerName
		public RuleCall getSourceLayerNameParserRuleCall_4_0() { return cSourceLayerNameParserRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'target:'
		public Keyword getTargetKeyword_6() { return cTargetKeyword_6; }
		
		//target=LayerName
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }
		
		//LayerName
		public RuleCall getTargetLayerNameParserRuleCall_7_0() { return cTargetLayerNameParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TechnologyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Technology");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTechKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJavaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cJavaJavaAppParserRuleCall_2_0 = (RuleCall)cJavaAssignment_2.eContents().get(0);
		private final Assignment cReactAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReactReactAppParserRuleCall_3_0 = (RuleCall)cReactAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// --------------------- Technology ------------------------------------------------
		//Technology:
		//	'tech' '{'
		//	java=JavaApp
		//	react=ReactApp
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'tech' '{' java=JavaApp react=ReactApp '}'
		public Group getGroup() { return cGroup; }
		
		//'tech'
		public Keyword getTechKeyword_0() { return cTechKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//java=JavaApp
		public Assignment getJavaAssignment_2() { return cJavaAssignment_2; }
		
		//JavaApp
		public RuleCall getJavaJavaAppParserRuleCall_2_0() { return cJavaJavaAppParserRuleCall_2_0; }
		
		//react=ReactApp
		public Assignment getReactAssignment_3() { return cReactAssignment_3; }
		
		//ReactApp
		public RuleCall getReactReactAppParserRuleCall_3_0() { return cReactReactAppParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JavaAppElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JavaApp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJavaAppKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJeeprojectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cJeeprojectJeeProjectParserRuleCall_2_0 = (RuleCall)cJeeprojectAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// --------------------- Backend----- ----------------------------------------------
		//JavaApp:
		//	'javaApp' '{'
		//	jeeproject+=JeeProject
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'javaApp' '{' jeeproject+=JeeProject '}'
		public Group getGroup() { return cGroup; }
		
		//'javaApp'
		public Keyword getJavaAppKeyword_0() { return cJavaAppKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//jeeproject+=JeeProject
		public Assignment getJeeprojectAssignment_2() { return cJeeprojectAssignment_2; }
		
		//JeeProject
		public RuleCall getJeeprojectJeeProjectParserRuleCall_2_0() { return cJeeprojectJeeProjectParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class JeeProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JeeProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJeeProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSubprojectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSubprojectSubprojectParserRuleCall_3_0 = (RuleCall)cSubprojectAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JeeProject:
		//	'jeeProject' name=ID '{'
		//	subproject+=Subproject+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'jeeProject' name=ID '{' subproject+=Subproject+ '}'
		public Group getGroup() { return cGroup; }
		
		//'jeeProject'
		public Keyword getJeeProjectKeyword_0() { return cJeeProjectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//subproject+=Subproject+
		public Assignment getSubprojectAssignment_3() { return cSubprojectAssignment_3; }
		
		//Subproject
		public RuleCall getSubprojectSubprojectParserRuleCall_3_0() { return cSubprojectSubprojectParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class SubprojectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Subproject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubprojectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEpackageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEpackageEpackageParserRuleCall_3_0 = (RuleCall)cEpackageAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLibraryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLibraryLibraryParserRuleCall_5_0 = (RuleCall)cLibraryAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptorDescriptorParserRuleCall_7_0 = (RuleCall)cDescriptorAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Subproject:
		//	'subproject' name=ID '{'
		//	epackage+=Epackage+ ','
		//	library+=Library+ ','
		//	descriptor+=Descriptor+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'subproject' name=ID '{' epackage+=Epackage+ ',' library+=Library+ ',' descriptor+=Descriptor+ '}'
		public Group getGroup() { return cGroup; }
		
		//'subproject'
		public Keyword getSubprojectKeyword_0() { return cSubprojectKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//epackage+=Epackage+
		public Assignment getEpackageAssignment_3() { return cEpackageAssignment_3; }
		
		//Epackage
		public RuleCall getEpackageEpackageParserRuleCall_3_0() { return cEpackageEpackageParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//library+=Library+
		public Assignment getLibraryAssignment_5() { return cLibraryAssignment_5; }
		
		//Library
		public RuleCall getLibraryLibraryParserRuleCall_5_0() { return cLibraryLibraryParserRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//descriptor+=Descriptor+
		public Assignment getDescriptorAssignment_7() { return cDescriptorAssignment_7; }
		
		//Descriptor
		public RuleCall getDescriptorDescriptorParserRuleCall_7_0() { return cDescriptorDescriptorParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AbstractClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AbstractClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAbstractClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributeAttributeParserRuleCall_3_0 = (RuleCall)cAttributeAssignment_3.eContents().get(0);
		private final Assignment cMethodClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodClassMethodBackParserRuleCall_4_0 = (RuleCall)cMethodClassAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnnotationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAnnotationAnnotationCrossReference_5_1_0 = (CrossReference)cAnnotationAssignment_5_1.eContents().get(0);
		private final RuleCall cAnnotationAnnotationIDTerminalRuleCall_5_1_0_1 = (RuleCall)cAnnotationAnnotationCrossReference_5_1_0.eContents().get(1);
		private final Assignment cAbstractMethodAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAbstractMethodAbstractMethodParserRuleCall_6_0 = (RuleCall)cAbstractMethodAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//AbstractClass:
		//	'abstractClass' name=ID '{'
		//	attribute+=Attribute*
		//	methodClass+=MethodBack* ('use :' annotation=[Annotation])*
		//	abstractMethod+=AbstractMethod*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'abstractClass' name=ID '{' attribute+=Attribute* methodClass+=MethodBack* ('use :' annotation=[Annotation])*
		//abstractMethod+=AbstractMethod* '}'
		public Group getGroup() { return cGroup; }
		
		//'abstractClass'
		public Keyword getAbstractClassKeyword_0() { return cAbstractClassKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attribute+=Attribute*
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//Attribute
		public RuleCall getAttributeAttributeParserRuleCall_3_0() { return cAttributeAttributeParserRuleCall_3_0; }
		
		//methodClass+=MethodBack*
		public Assignment getMethodClassAssignment_4() { return cMethodClassAssignment_4; }
		
		//MethodBack
		public RuleCall getMethodClassMethodBackParserRuleCall_4_0() { return cMethodClassMethodBackParserRuleCall_4_0; }
		
		//('use :' annotation=[Annotation])*
		public Group getGroup_5() { return cGroup_5; }
		
		//'use :'
		public Keyword getUseKeyword_5_0() { return cUseKeyword_5_0; }
		
		//annotation=[Annotation]
		public Assignment getAnnotationAssignment_5_1() { return cAnnotationAssignment_5_1; }
		
		//[Annotation]
		public CrossReference getAnnotationAnnotationCrossReference_5_1_0() { return cAnnotationAnnotationCrossReference_5_1_0; }
		
		//ID
		public RuleCall getAnnotationAnnotationIDTerminalRuleCall_5_1_0_1() { return cAnnotationAnnotationIDTerminalRuleCall_5_1_0_1; }
		
		//abstractMethod+=AbstractMethod*
		public Assignment getAbstractMethodAssignment_6() { return cAbstractMethodAssignment_6; }
		
		//AbstractMethod
		public RuleCall getAbstractMethodAbstractMethodParserRuleCall_6_0() { return cAbstractMethodAbstractMethodParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class GenericClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.GenericClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenericClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributeAttributeParserRuleCall_3_0 = (RuleCall)cAttributeAssignment_3.eContents().get(0);
		private final Assignment cMethodClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodClassMethodBackParserRuleCall_4_0 = (RuleCall)cMethodClassAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnnotationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAnnotationAnnotationCrossReference_5_1_0 = (CrossReference)cAnnotationAssignment_5_1.eContents().get(0);
		private final RuleCall cAnnotationAnnotationIDTerminalRuleCall_5_1_0_1 = (RuleCall)cAnnotationAnnotationCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cExtendsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAbsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAbsAbstractClassCrossReference_6_1_0 = (CrossReference)cAbsAssignment_6_1.eContents().get(0);
		private final RuleCall cAbsAbstractClassIDTerminalRuleCall_6_1_0_1 = (RuleCall)cAbsAbstractClassCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cImplementsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cImpAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cImpEinterfaceCrossReference_7_1_0 = (CrossReference)cImpAssignment_7_1.eContents().get(0);
		private final RuleCall cImpEinterfaceIDTerminalRuleCall_7_1_0_1 = (RuleCall)cImpEinterfaceCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//GenericClass:
		//	'genericClass' name=ID '{'
		//	attribute+=Attribute*
		//	methodClass+=MethodBack* ('use :' annotation=[Annotation])* ('extends :' abs=[AbstractClass])? ('implements :'
		//	imp=[Einterface])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'genericClass' name=ID '{' attribute+=Attribute* methodClass+=MethodBack* ('use :' annotation=[Annotation])*
		//('extends :' abs=[AbstractClass])? ('implements :' imp=[Einterface])* '}'
		public Group getGroup() { return cGroup; }
		
		//'genericClass'
		public Keyword getGenericClassKeyword_0() { return cGenericClassKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attribute+=Attribute*
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//Attribute
		public RuleCall getAttributeAttributeParserRuleCall_3_0() { return cAttributeAttributeParserRuleCall_3_0; }
		
		//methodClass+=MethodBack*
		public Assignment getMethodClassAssignment_4() { return cMethodClassAssignment_4; }
		
		//MethodBack
		public RuleCall getMethodClassMethodBackParserRuleCall_4_0() { return cMethodClassMethodBackParserRuleCall_4_0; }
		
		//('use :' annotation=[Annotation])*
		public Group getGroup_5() { return cGroup_5; }
		
		//'use :'
		public Keyword getUseKeyword_5_0() { return cUseKeyword_5_0; }
		
		//annotation=[Annotation]
		public Assignment getAnnotationAssignment_5_1() { return cAnnotationAssignment_5_1; }
		
		//[Annotation]
		public CrossReference getAnnotationAnnotationCrossReference_5_1_0() { return cAnnotationAnnotationCrossReference_5_1_0; }
		
		//ID
		public RuleCall getAnnotationAnnotationIDTerminalRuleCall_5_1_0_1() { return cAnnotationAnnotationIDTerminalRuleCall_5_1_0_1; }
		
		//('extends :' abs=[AbstractClass])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'extends :'
		public Keyword getExtendsKeyword_6_0() { return cExtendsKeyword_6_0; }
		
		//abs=[AbstractClass]
		public Assignment getAbsAssignment_6_1() { return cAbsAssignment_6_1; }
		
		//[AbstractClass]
		public CrossReference getAbsAbstractClassCrossReference_6_1_0() { return cAbsAbstractClassCrossReference_6_1_0; }
		
		//ID
		public RuleCall getAbsAbstractClassIDTerminalRuleCall_6_1_0_1() { return cAbsAbstractClassIDTerminalRuleCall_6_1_0_1; }
		
		//('implements :' imp=[Einterface])*
		public Group getGroup_7() { return cGroup_7; }
		
		//'implements :'
		public Keyword getImplementsKeyword_7_0() { return cImplementsKeyword_7_0; }
		
		//imp=[Einterface]
		public Assignment getImpAssignment_7_1() { return cImpAssignment_7_1; }
		
		//[Einterface]
		public CrossReference getImpEinterfaceCrossReference_7_1_0() { return cImpEinterfaceCrossReference_7_1_0; }
		
		//ID
		public RuleCall getImpEinterfaceIDTerminalRuleCall_7_1_0_1() { return cImpEinterfaceIDTerminalRuleCall_7_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EinterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Einterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEInterfaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributeAttributeParserRuleCall_3_0 = (RuleCall)cAttributeAssignment_3.eContents().get(0);
		private final Assignment cAbstractMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAbstractMethodAbstractMethodParserRuleCall_4_0 = (RuleCall)cAbstractMethodAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Einterface:
		//	'eInterface' name=ID '{'
		//	attribute+=Attribute*
		//	abstractMethod+=AbstractMethod*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'eInterface' name=ID '{' attribute+=Attribute* abstractMethod+=AbstractMethod* '}'
		public Group getGroup() { return cGroup; }
		
		//'eInterface'
		public Keyword getEInterfaceKeyword_0() { return cEInterfaceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attribute+=Attribute*
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//Attribute
		public RuleCall getAttributeAttributeParserRuleCall_3_0() { return cAttributeAttributeParserRuleCall_3_0; }
		
		//abstractMethod+=AbstractMethod*
		public Assignment getAbstractMethodAssignment_4() { return cAbstractMethodAssignment_4; }
		
		//AbstractMethod
		public RuleCall getAbstractMethodAbstractMethodParserRuleCall_4_0() { return cAbstractMethodAbstractMethodParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class NativeClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.NativeClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNativeClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributeAttributeParserRuleCall_3_0 = (RuleCall)cAttributeAssignment_3.eContents().get(0);
		private final Assignment cMethodClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodClassMethodBackParserRuleCall_4_0 = (RuleCall)cMethodClassAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NativeClass:
		//	'nativeClass' name=ID '{'
		//	attribute+=Attribute*
		//	methodClass+=MethodBack*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'nativeClass' name=ID '{' attribute+=Attribute* methodClass+=MethodBack* '}'
		public Group getGroup() { return cGroup; }
		
		//'nativeClass'
		public Keyword getNativeClassKeyword_0() { return cNativeClassKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//attribute+=Attribute*
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//Attribute
		public RuleCall getAttributeAttributeParserRuleCall_3_0() { return cAttributeAttributeParserRuleCall_3_0; }
		
		//methodClass+=MethodBack*
		public Assignment getMethodClassAssignment_4() { return cMethodClassAssignment_4; }
		
		//MethodBack
		public RuleCall getMethodClassMethodBackParserRuleCall_4_0() { return cMethodClassMethodBackParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EclassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Eclass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGenericClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNativeClassParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnnotationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Eclass:
		//	AbstractClass | GenericClass | NativeClass | Annotation;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractClass | GenericClass | NativeClass | Annotation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AbstractClass
		public RuleCall getAbstractClassParserRuleCall_0() { return cAbstractClassParserRuleCall_0; }
		
		//GenericClass
		public RuleCall getGenericClassParserRuleCall_1() { return cGenericClassParserRuleCall_1; }
		
		//NativeClass
		public RuleCall getNativeClassParserRuleCall_2() { return cNativeClassParserRuleCall_2; }
		
		//Annotation
		public RuleCall getAnnotationParserRuleCall_3() { return cAnnotationParserRuleCall_3; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeEclassCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeEclassIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeEclassCrossReference_3_0.eContents().get(1);
		
		//Attribute:
		//	'attribute' name=ID ':' type=[Eclass];
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' name=ID ':' type=[Eclass]
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=[Eclass]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[Eclass]
		public CrossReference getTypeEclassCrossReference_3_0() { return cTypeEclassCrossReference_3_0; }
		
		//ID
		public RuleCall getTypeEclassIDTerminalRuleCall_3_0_1() { return cTypeEclassIDTerminalRuleCall_3_0_1; }
	}
	public class EpackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Epackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEpackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEclassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEclassEclassParserRuleCall_3_0 = (RuleCall)cEclassAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Epackage:
		//	'epackage' name=ID '{'
		//	eclass+=Eclass*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'epackage' name=ID '{' eclass+=Eclass* '}'
		public Group getGroup() { return cGroup; }
		
		//'epackage'
		public Keyword getEpackageKeyword_0() { return cEpackageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//eclass+=Eclass*
		public Assignment getEclassAssignment_3() { return cEclassAssignment_3; }
		
		//Eclass
		public RuleCall getEclassEclassParserRuleCall_3_0() { return cEclassEclassParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MethodBackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.MethodBack");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMethodBackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgumentKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cArgEclassCrossReference_3_1_0 = (CrossReference)cArgAssignment_3_1.eContents().get(0);
		private final RuleCall cArgEclassIDTerminalRuleCall_3_1_0_1 = (RuleCall)cArgEclassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypeEclassCrossReference_4_1_0 = (CrossReference)cTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cTypeEclassIDTerminalRuleCall_4_1_0_1 = (RuleCall)cTypeEclassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MethodBack:
		//	'methodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'methodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])? '}'
		public Group getGroup() { return cGroup; }
		
		//'methodBack'
		public Keyword getMethodBackKeyword_0() { return cMethodBackKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('argument' arg=[Eclass])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'argument'
		public Keyword getArgumentKeyword_3_0() { return cArgumentKeyword_3_0; }
		
		//arg=[Eclass]
		public Assignment getArgAssignment_3_1() { return cArgAssignment_3_1; }
		
		//[Eclass]
		public CrossReference getArgEclassCrossReference_3_1_0() { return cArgEclassCrossReference_3_1_0; }
		
		//ID
		public RuleCall getArgEclassIDTerminalRuleCall_3_1_0_1() { return cArgEclassIDTerminalRuleCall_3_1_0_1; }
		
		//('return' type=[Eclass])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'return'
		public Keyword getReturnKeyword_4_0() { return cReturnKeyword_4_0; }
		
		//type=[Eclass]
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//[Eclass]
		public CrossReference getTypeEclassCrossReference_4_1_0() { return cTypeEclassCrossReference_4_1_0; }
		
		//ID
		public RuleCall getTypeEclassIDTerminalRuleCall_4_1_0_1() { return cTypeEclassIDTerminalRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AbstractMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AbstractMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAbstractMethodBackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgumentKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cArgEclassCrossReference_3_1_0 = (CrossReference)cArgAssignment_3_1.eContents().get(0);
		private final RuleCall cArgEclassIDTerminalRuleCall_3_1_0_1 = (RuleCall)cArgEclassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypeEclassCrossReference_4_1_0 = (CrossReference)cTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cTypeEclassIDTerminalRuleCall_4_1_0_1 = (RuleCall)cTypeEclassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AbstractMethod:
		//	'abstractMethodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'abstractMethodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])? '}'
		public Group getGroup() { return cGroup; }
		
		//'abstractMethodBack'
		public Keyword getAbstractMethodBackKeyword_0() { return cAbstractMethodBackKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('argument' arg=[Eclass])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'argument'
		public Keyword getArgumentKeyword_3_0() { return cArgumentKeyword_3_0; }
		
		//arg=[Eclass]
		public Assignment getArgAssignment_3_1() { return cArgAssignment_3_1; }
		
		//[Eclass]
		public CrossReference getArgEclassCrossReference_3_1_0() { return cArgEclassCrossReference_3_1_0; }
		
		//ID
		public RuleCall getArgEclassIDTerminalRuleCall_3_1_0_1() { return cArgEclassIDTerminalRuleCall_3_1_0_1; }
		
		//('return' type=[Eclass])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'return'
		public Keyword getReturnKeyword_4_0() { return cReturnKeyword_4_0; }
		
		//type=[Eclass]
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//[Eclass]
		public CrossReference getTypeEclassCrossReference_4_1_0() { return cTypeEclassCrossReference_4_1_0; }
		
		//ID
		public RuleCall getTypeEclassIDTerminalRuleCall_4_1_0_1() { return cTypeEclassIDTerminalRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DescriptorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Descriptor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPathAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPathSTRINGTerminalRuleCall_4_0 = (RuleCall)cPathAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Descriptor:
		//	'descriptor' name=ID '{'
		//	'path' path=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'descriptor' name=ID '{' 'path' path=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'descriptor'
		public Keyword getDescriptorKeyword_0() { return cDescriptorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'path'
		public Keyword getPathKeyword_3() { return cPathKeyword_3; }
		
		//path=STRING
		public Assignment getPathAssignment_4() { return cPathAssignment_4; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_4_0() { return cPathSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPropertieKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertieAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertieSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cPropertieAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Annotation:
		//	'annotation' name=ID '{' ('propertie' propertie=STRING)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'annotation' name=ID '{' ('propertie' propertie=STRING)* '}'
		public Group getGroup() { return cGroup; }
		
		//'annotation'
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('propertie' propertie=STRING)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'propertie'
		public Keyword getPropertieKeyword_3_0() { return cPropertieKeyword_3_0; }
		
		//propertie=STRING
		public Assignment getPropertieAssignment_3_1() { return cPropertieAssignment_3_1; }
		
		//STRING
		public RuleCall getPropertieSTRINGTerminalRuleCall_3_1_0() { return cPropertieSTRINGTerminalRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Library");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLibraryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIsNativeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIsNativeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIsNativeBooleanParserRuleCall_4_0 = (RuleCall)cIsNativeAssignment_4.eContents().get(0);
		private final Assignment cAnnotationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Library:
		//	'library' name=ID '{'
		//	'isNative' isNative=Boolean
		//	annotation+=Annotation*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'library' name=ID '{' 'isNative' isNative=Boolean annotation+=Annotation* '}'
		public Group getGroup() { return cGroup; }
		
		//'library'
		public Keyword getLibraryKeyword_0() { return cLibraryKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'isNative'
		public Keyword getIsNativeKeyword_3() { return cIsNativeKeyword_3; }
		
		//isNative=Boolean
		public Assignment getIsNativeAssignment_4() { return cIsNativeAssignment_4; }
		
		//Boolean
		public RuleCall getIsNativeBooleanParserRuleCall_4_0() { return cIsNativeBooleanParserRuleCall_4_0; }
		
		//annotation+=Annotation*
		public Assignment getAnnotationAssignment_5() { return cAnnotationAssignment_5; }
		
		//Annotation
		public RuleCall getAnnotationAnnotationParserRuleCall_5_0() { return cAnnotationAnnotationParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class AbstractFrontElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AbstractFrontElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReactAppParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFunctionalityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDirectoryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cJsModuleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRouterComponentParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cContainerParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cVisualizerParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cServiceFrontParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cFileParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cStateParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cActionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cActionCreatorParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cActionDispatcherParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cReducerParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cAxiosRequestParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//// --------------------- Frontend---- ----------------------------------------------
		//AbstractFrontElement:
		//	ReactApp | Functionality | Directory | JsModule | Type | RouterComponent | Container | Visualizer | ServiceFront |
		//	File | State | Action | ActionCreator | ActionDispatcher | Reducer | AxiosRequest;
		@Override public ParserRule getRule() { return rule; }
		
		//ReactApp | Functionality | Directory | JsModule | Type | RouterComponent | Container | Visualizer | ServiceFront | File
		//| State | Action | ActionCreator | ActionDispatcher | Reducer | AxiosRequest
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReactApp
		public RuleCall getReactAppParserRuleCall_0() { return cReactAppParserRuleCall_0; }
		
		//Functionality
		public RuleCall getFunctionalityParserRuleCall_1() { return cFunctionalityParserRuleCall_1; }
		
		//Directory
		public RuleCall getDirectoryParserRuleCall_2() { return cDirectoryParserRuleCall_2; }
		
		//JsModule
		public RuleCall getJsModuleParserRuleCall_3() { return cJsModuleParserRuleCall_3; }
		
		//Type
		public RuleCall getTypeParserRuleCall_4() { return cTypeParserRuleCall_4; }
		
		//RouterComponent
		public RuleCall getRouterComponentParserRuleCall_5() { return cRouterComponentParserRuleCall_5; }
		
		//Container
		public RuleCall getContainerParserRuleCall_6() { return cContainerParserRuleCall_6; }
		
		//Visualizer
		public RuleCall getVisualizerParserRuleCall_7() { return cVisualizerParserRuleCall_7; }
		
		//ServiceFront
		public RuleCall getServiceFrontParserRuleCall_8() { return cServiceFrontParserRuleCall_8; }
		
		//File
		public RuleCall getFileParserRuleCall_9() { return cFileParserRuleCall_9; }
		
		//State
		public RuleCall getStateParserRuleCall_10() { return cStateParserRuleCall_10; }
		
		//Action
		public RuleCall getActionParserRuleCall_11() { return cActionParserRuleCall_11; }
		
		//ActionCreator
		public RuleCall getActionCreatorParserRuleCall_12() { return cActionCreatorParserRuleCall_12; }
		
		//ActionDispatcher
		public RuleCall getActionDispatcherParserRuleCall_13() { return cActionDispatcherParserRuleCall_13; }
		
		//Reducer
		public RuleCall getReducerParserRuleCall_14() { return cReducerParserRuleCall_14; }
		
		//AxiosRequest
		public RuleCall getAxiosRequestParserRuleCall_15() { return cAxiosRequestParserRuleCall_15; }
	}
	public class ReactAppElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ReactApp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReactAppKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsAbstractFrontElementParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPerformsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFuncAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cFuncFunctionalityCrossReference_3_1_0 = (CrossReference)cFuncAssignment_3_1.eContents().get(0);
		private final RuleCall cFuncFunctionalityIDTerminalRuleCall_3_1_0_1 = (RuleCall)cFuncFunctionalityCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHoldsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDirAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDirDirectoryCrossReference_4_1_0 = (CrossReference)cDirAssignment_4_1.eContents().get(0);
		private final RuleCall cDirDirectoryIDTerminalRuleCall_4_1_0_1 = (RuleCall)cDirDirectoryCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cModAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cModJsModuleCrossReference_5_1_0 = (CrossReference)cModAssignment_5_1.eContents().get(0);
		private final RuleCall cModJsModuleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cModJsModuleCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReactApp:
		//	'reactApp' '{'
		//	elements+=AbstractFrontElement+ ('performs:' func=[Functionality])+ ('holds:' dir=[Directory])+ ('use:'
		//	mod=[JsModule])+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'reactApp' '{' elements+=AbstractFrontElement+ ('performs:' func=[Functionality])+ ('holds:' dir=[Directory])+ ('use:'
		//mod=[JsModule])+ '}'
		public Group getGroup() { return cGroup; }
		
		//'reactApp'
		public Keyword getReactAppKeyword_0() { return cReactAppKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//elements+=AbstractFrontElement+
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }
		
		//AbstractFrontElement
		public RuleCall getElementsAbstractFrontElementParserRuleCall_2_0() { return cElementsAbstractFrontElementParserRuleCall_2_0; }
		
		//('performs:' func=[Functionality])+
		public Group getGroup_3() { return cGroup_3; }
		
		//'performs:'
		public Keyword getPerformsKeyword_3_0() { return cPerformsKeyword_3_0; }
		
		//func=[Functionality]
		public Assignment getFuncAssignment_3_1() { return cFuncAssignment_3_1; }
		
		//[Functionality]
		public CrossReference getFuncFunctionalityCrossReference_3_1_0() { return cFuncFunctionalityCrossReference_3_1_0; }
		
		//ID
		public RuleCall getFuncFunctionalityIDTerminalRuleCall_3_1_0_1() { return cFuncFunctionalityIDTerminalRuleCall_3_1_0_1; }
		
		//('holds:' dir=[Directory])+
		public Group getGroup_4() { return cGroup_4; }
		
		//'holds:'
		public Keyword getHoldsKeyword_4_0() { return cHoldsKeyword_4_0; }
		
		//dir=[Directory]
		public Assignment getDirAssignment_4_1() { return cDirAssignment_4_1; }
		
		//[Directory]
		public CrossReference getDirDirectoryCrossReference_4_1_0() { return cDirDirectoryCrossReference_4_1_0; }
		
		//ID
		public RuleCall getDirDirectoryIDTerminalRuleCall_4_1_0_1() { return cDirDirectoryIDTerminalRuleCall_4_1_0_1; }
		
		//('use:' mod=[JsModule])+
		public Group getGroup_5() { return cGroup_5; }
		
		//'use:'
		public Keyword getUseKeyword_5_0() { return cUseKeyword_5_0; }
		
		//mod=[JsModule]
		public Assignment getModAssignment_5_1() { return cModAssignment_5_1; }
		
		//[JsModule]
		public CrossReference getModJsModuleCrossReference_5_1_0() { return cModJsModuleCrossReference_5_1_0; }
		
		//ID
		public RuleCall getModJsModuleIDTerminalRuleCall_5_1_0_1() { return cModJsModuleIDTerminalRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FunctionalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Functionality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionalityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUsesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRouteAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRouteRouterComponentCrossReference_3_1_0 = (CrossReference)cRouteAssignment_3_1.eContents().get(0);
		private final RuleCall cRouteRouterComponentIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRouteRouterComponentCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWrapsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cWrapAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cWrapContainerCrossReference_4_1_0 = (CrossReference)cWrapAssignment_4_1.eContents().get(0);
		private final RuleCall cWrapContainerIDTerminalRuleCall_4_1_0_1 = (RuleCall)cWrapContainerCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRenderKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRenderAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cRenderVisualizerCrossReference_5_1_0 = (CrossReference)cRenderAssignment_5_1.eContents().get(0);
		private final RuleCall cRenderVisualizerIDTerminalRuleCall_5_1_0_1 = (RuleCall)cRenderVisualizerCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStateKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStateAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cStateStateCrossReference_6_1_0 = (CrossReference)cStateAssignment_6_1.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_6_1_0_1 = (RuleCall)cStateStateCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCallsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cServiceAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cServiceServiceFrontCrossReference_7_1_0 = (CrossReference)cServiceAssignment_7_1.eContents().get(0);
		private final RuleCall cServiceServiceFrontIDTerminalRuleCall_7_1_0_1 = (RuleCall)cServiceServiceFrontCrossReference_7_1_0.eContents().get(1);
		private final Keyword cOrganizedByKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cTypeDirectoryCrossReference_9_0 = (CrossReference)cTypeAssignment_9.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_9_0_1 = (RuleCall)cTypeDirectoryCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Functionality:
		//	'functionality' name=ID '{' ('uses:' route=[RouterComponent])* ('wraps:' wrap=[Container])* ('render:'
		//	render=[Visualizer])+ ('state:' state=[State])* ('calls:' service=[ServiceFront])*
		//	'organizedBy:' type=[Directory]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'functionality' name=ID '{' ('uses:' route=[RouterComponent])* ('wraps:' wrap=[Container])* ('render:'
		//render=[Visualizer])+ ('state:' state=[State])* ('calls:' service=[ServiceFront])* 'organizedBy:' type=[Directory] '}'
		public Group getGroup() { return cGroup; }
		
		//'functionality'
		public Keyword getFunctionalityKeyword_0() { return cFunctionalityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('uses:' route=[RouterComponent])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'uses:'
		public Keyword getUsesKeyword_3_0() { return cUsesKeyword_3_0; }
		
		//route=[RouterComponent]
		public Assignment getRouteAssignment_3_1() { return cRouteAssignment_3_1; }
		
		//[RouterComponent]
		public CrossReference getRouteRouterComponentCrossReference_3_1_0() { return cRouteRouterComponentCrossReference_3_1_0; }
		
		//ID
		public RuleCall getRouteRouterComponentIDTerminalRuleCall_3_1_0_1() { return cRouteRouterComponentIDTerminalRuleCall_3_1_0_1; }
		
		//('wraps:' wrap=[Container])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'wraps:'
		public Keyword getWrapsKeyword_4_0() { return cWrapsKeyword_4_0; }
		
		//wrap=[Container]
		public Assignment getWrapAssignment_4_1() { return cWrapAssignment_4_1; }
		
		//[Container]
		public CrossReference getWrapContainerCrossReference_4_1_0() { return cWrapContainerCrossReference_4_1_0; }
		
		//ID
		public RuleCall getWrapContainerIDTerminalRuleCall_4_1_0_1() { return cWrapContainerIDTerminalRuleCall_4_1_0_1; }
		
		//('render:' render=[Visualizer])+
		public Group getGroup_5() { return cGroup_5; }
		
		//'render:'
		public Keyword getRenderKeyword_5_0() { return cRenderKeyword_5_0; }
		
		//render=[Visualizer]
		public Assignment getRenderAssignment_5_1() { return cRenderAssignment_5_1; }
		
		//[Visualizer]
		public CrossReference getRenderVisualizerCrossReference_5_1_0() { return cRenderVisualizerCrossReference_5_1_0; }
		
		//ID
		public RuleCall getRenderVisualizerIDTerminalRuleCall_5_1_0_1() { return cRenderVisualizerIDTerminalRuleCall_5_1_0_1; }
		
		//('state:' state=[State])*
		public Group getGroup_6() { return cGroup_6; }
		
		//'state:'
		public Keyword getStateKeyword_6_0() { return cStateKeyword_6_0; }
		
		//state=[State]
		public Assignment getStateAssignment_6_1() { return cStateAssignment_6_1; }
		
		//[State]
		public CrossReference getStateStateCrossReference_6_1_0() { return cStateStateCrossReference_6_1_0; }
		
		//ID
		public RuleCall getStateStateIDTerminalRuleCall_6_1_0_1() { return cStateStateIDTerminalRuleCall_6_1_0_1; }
		
		//('calls:' service=[ServiceFront])*
		public Group getGroup_7() { return cGroup_7; }
		
		//'calls:'
		public Keyword getCallsKeyword_7_0() { return cCallsKeyword_7_0; }
		
		//service=[ServiceFront]
		public Assignment getServiceAssignment_7_1() { return cServiceAssignment_7_1; }
		
		//[ServiceFront]
		public CrossReference getServiceServiceFrontCrossReference_7_1_0() { return cServiceServiceFrontCrossReference_7_1_0; }
		
		//ID
		public RuleCall getServiceServiceFrontIDTerminalRuleCall_7_1_0_1() { return cServiceServiceFrontIDTerminalRuleCall_7_1_0_1; }
		
		//'organizedBy:'
		public Keyword getOrganizedByKeyword_8() { return cOrganizedByKeyword_8; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_9() { return cTypeAssignment_9; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_9_0() { return cTypeDirectoryCrossReference_9_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_9_0_1() { return cTypeDirectoryIDTerminalRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class RouterComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RouterComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRouterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInWithinKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeDirectoryCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeDirectoryCrossReference_4_0.eContents().get(1);
		private final Keyword cUseKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTypeJsModuleCrossReference_6_0 = (CrossReference)cTypeAssignment_6.eContents().get(0);
		private final RuleCall cTypeJsModuleIDTerminalRuleCall_6_0_1 = (RuleCall)cTypeJsModuleCrossReference_6_0.eContents().get(1);
		private final Keyword cRouteKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cRouteAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cRouteUIComponentCrossReference_8_0 = (CrossReference)cRouteAssignment_8.eContents().get(0);
		private final RuleCall cRouteUIComponentIDTerminalRuleCall_8_0_1 = (RuleCall)cRouteUIComponentCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//RouterComponent:
		//	'router' name=ID '{'
		//	'inWithin:' type=[Directory]
		//	'use:' type=[JsModule]
		//	'route:' route=[UIComponent]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'router' name=ID '{' 'inWithin:' type=[Directory] 'use:' type=[JsModule] 'route:' route=[UIComponent] '}'
		public Group getGroup() { return cGroup; }
		
		//'router'
		public Keyword getRouterKeyword_0() { return cRouterKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'inWithin:'
		public Keyword getInWithinKeyword_3() { return cInWithinKeyword_3; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_4_0() { return cTypeDirectoryCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_4_0_1() { return cTypeDirectoryIDTerminalRuleCall_4_0_1; }
		
		//'use:'
		public Keyword getUseKeyword_5() { return cUseKeyword_5; }
		
		//type=[JsModule]
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//[JsModule]
		public CrossReference getTypeJsModuleCrossReference_6_0() { return cTypeJsModuleCrossReference_6_0; }
		
		//ID
		public RuleCall getTypeJsModuleIDTerminalRuleCall_6_0_1() { return cTypeJsModuleIDTerminalRuleCall_6_0_1; }
		
		//'route:'
		public Keyword getRouteKeyword_7() { return cRouteKeyword_7; }
		
		//route=[UIComponent]
		public Assignment getRouteAssignment_8() { return cRouteAssignment_8; }
		
		//[UIComponent]
		public CrossReference getRouteUIComponentCrossReference_8_0() { return cRouteUIComponentCrossReference_8_0; }
		
		//ID
		public RuleCall getRouteUIComponentIDTerminalRuleCall_8_0_1() { return cRouteUIComponentIDTerminalRuleCall_8_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class UIComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.UIComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRouterComponentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVisualizerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UIComponent:
		//	RouterComponent | Visualizer;
		@Override public ParserRule getRule() { return rule; }
		
		//RouterComponent | Visualizer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RouterComponent
		public RuleCall getRouterComponentParserRuleCall_0() { return cRouterComponentParserRuleCall_0; }
		
		//Visualizer
		public RuleCall getVisualizerParserRuleCall_1() { return cVisualizerParserRuleCall_1; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInWithinKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeDirectoryCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeDirectoryCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDispatchKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTypeActionDispatcherCrossReference_5_1_0 = (CrossReference)cTypeAssignment_5_1.eContents().get(0);
		private final RuleCall cTypeActionDispatcherIDTerminalRuleCall_5_1_0_1 = (RuleCall)cTypeActionDispatcherCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMapKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTypeReducerCrossReference_6_1_0 = (CrossReference)cTypeAssignment_6_1.eContents().get(0);
		private final RuleCall cTypeReducerIDTerminalRuleCall_6_1_0_1 = (RuleCall)cTypeReducerCrossReference_6_1_0.eContents().get(1);
		private final Keyword cUseKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTypeJsModuleCrossReference_8_0 = (CrossReference)cTypeAssignment_8.eContents().get(0);
		private final RuleCall cTypeJsModuleIDTerminalRuleCall_8_0_1 = (RuleCall)cTypeJsModuleCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Container:
		//	'container' name=ID '{'
		//	'inWithin:' type=[Directory] ('dispatch:' type=[ActionDispatcher])? ('map:' type=[Reducer])*
		//	'use:' type=[JsModule]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'container' name=ID '{' 'inWithin:' type=[Directory] ('dispatch:' type=[ActionDispatcher])? ('map:' type=[Reducer])*
		//'use:' type=[JsModule] '}'
		public Group getGroup() { return cGroup; }
		
		//'container'
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'inWithin:'
		public Keyword getInWithinKeyword_3() { return cInWithinKeyword_3; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_4_0() { return cTypeDirectoryCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_4_0_1() { return cTypeDirectoryIDTerminalRuleCall_4_0_1; }
		
		//('dispatch:' type=[ActionDispatcher])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'dispatch:'
		public Keyword getDispatchKeyword_5_0() { return cDispatchKeyword_5_0; }
		
		//type=[ActionDispatcher]
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//[ActionDispatcher]
		public CrossReference getTypeActionDispatcherCrossReference_5_1_0() { return cTypeActionDispatcherCrossReference_5_1_0; }
		
		//ID
		public RuleCall getTypeActionDispatcherIDTerminalRuleCall_5_1_0_1() { return cTypeActionDispatcherIDTerminalRuleCall_5_1_0_1; }
		
		//('map:' type=[Reducer])*
		public Group getGroup_6() { return cGroup_6; }
		
		//'map:'
		public Keyword getMapKeyword_6_0() { return cMapKeyword_6_0; }
		
		//type=[Reducer]
		public Assignment getTypeAssignment_6_1() { return cTypeAssignment_6_1; }
		
		//[Reducer]
		public CrossReference getTypeReducerCrossReference_6_1_0() { return cTypeReducerCrossReference_6_1_0; }
		
		//ID
		public RuleCall getTypeReducerIDTerminalRuleCall_6_1_0_1() { return cTypeReducerIDTerminalRuleCall_6_1_0_1; }
		
		//'use:'
		public Keyword getUseKeyword_7() { return cUseKeyword_7; }
		
		//type=[JsModule]
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//[JsModule]
		public CrossReference getTypeJsModuleCrossReference_8_0() { return cTypeJsModuleCrossReference_8_0; }
		
		//ID
		public RuleCall getTypeJsModuleIDTerminalRuleCall_8_0_1() { return cTypeJsModuleIDTerminalRuleCall_8_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class VisualizerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Visualizer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVisualizerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInWithinKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeDirectoryCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeDirectoryCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cTypeJsModuleCrossReference_5_1_0 = (CrossReference)cTypeAssignment_5_1.eContents().get(0);
		private final RuleCall cTypeJsModuleIDTerminalRuleCall_5_1_0_1 = (RuleCall)cTypeJsModuleCrossReference_5_1_0.eContents().get(1);
		private final Assignment cMethodsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMethodsJsMethodParserRuleCall_6_0 = (RuleCall)cMethodsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Visualizer:
		//	'visualizer' name=ID '{'
		//	'inWithin:' type=[Directory] ('use:' type=[JsModule])+
		//	methods+=JsMethod+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'visualizer' name=ID '{' 'inWithin:' type=[Directory] ('use:' type=[JsModule])+ methods+=JsMethod+ '}'
		public Group getGroup() { return cGroup; }
		
		//'visualizer'
		public Keyword getVisualizerKeyword_0() { return cVisualizerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'inWithin:'
		public Keyword getInWithinKeyword_3() { return cInWithinKeyword_3; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_4_0() { return cTypeDirectoryCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_4_0_1() { return cTypeDirectoryIDTerminalRuleCall_4_0_1; }
		
		//('use:' type=[JsModule])+
		public Group getGroup_5() { return cGroup_5; }
		
		//'use:'
		public Keyword getUseKeyword_5_0() { return cUseKeyword_5_0; }
		
		//type=[JsModule]
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//[JsModule]
		public CrossReference getTypeJsModuleCrossReference_5_1_0() { return cTypeJsModuleCrossReference_5_1_0; }
		
		//ID
		public RuleCall getTypeJsModuleIDTerminalRuleCall_5_1_0_1() { return cTypeJsModuleIDTerminalRuleCall_5_1_0_1; }
		
		//methods+=JsMethod+
		public Assignment getMethodsAssignment_6() { return cMethodsAssignment_6; }
		
		//JsMethod
		public RuleCall getMethodsJsMethodParserRuleCall_6_0() { return cMethodsJsMethodParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ServiceFrontElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ServiceFront");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cUseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeJsModuleCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeJsModuleIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeJsModuleCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMethodKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMethodAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMethodSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cMethodAssignment_5_1.eContents().get(0);
		private final Assignment cRequestsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRequestsAxiosRequestParserRuleCall_6_0 = (RuleCall)cRequestsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ServiceFront:
		//	'service' name=ID '{'
		//	'use:' type=[JsModule] ('method:' method=STRING)+
		//	requests+=AxiosRequest+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'service' name=ID '{' 'use:' type=[JsModule] ('method:' method=STRING)+ requests+=AxiosRequest+ '}'
		public Group getGroup() { return cGroup; }
		
		//'service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'use:'
		public Keyword getUseKeyword_3() { return cUseKeyword_3; }
		
		//type=[JsModule]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[JsModule]
		public CrossReference getTypeJsModuleCrossReference_4_0() { return cTypeJsModuleCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeJsModuleIDTerminalRuleCall_4_0_1() { return cTypeJsModuleIDTerminalRuleCall_4_0_1; }
		
		//('method:' method=STRING)+
		public Group getGroup_5() { return cGroup_5; }
		
		//'method:'
		public Keyword getMethodKeyword_5_0() { return cMethodKeyword_5_0; }
		
		//method=STRING
		public Assignment getMethodAssignment_5_1() { return cMethodAssignment_5_1; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_5_1_0() { return cMethodSTRINGTerminalRuleCall_5_1_0; }
		
		//requests+=AxiosRequest+
		public Assignment getRequestsAssignment_6() { return cRequestsAssignment_6; }
		
		//AxiosRequest
		public RuleCall getRequestsAxiosRequestParserRuleCall_6_0() { return cRequestsAxiosRequestParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DirectoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Directory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDirectoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHasKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFileAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cFileFileCrossReference_3_1_0 = (CrossReference)cFileAssignment_3_1.eContents().get(0);
		private final RuleCall cFileFileIDTerminalRuleCall_3_1_0_1 = (RuleCall)cFileFileCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContainsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSubdirectoryAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSubdirectoryDirectoryCrossReference_4_1_0 = (CrossReference)cSubdirectoryAssignment_4_1.eContents().get(0);
		private final RuleCall cSubdirectoryDirectoryIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSubdirectoryDirectoryCrossReference_4_1_0.eContents().get(1);
		private final Keyword cPurposeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPurposeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPurposeSTRINGTerminalRuleCall_6_0 = (RuleCall)cPurposeAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Directory:
		//	'directory' name=ID '{' ('has:'+ file=[File])* ('contains:' subdirectory=[Directory])*
		//	'purpose:' purpose=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'directory' name=ID '{' ('has:'+ file=[File])* ('contains:' subdirectory=[Directory])* 'purpose:' purpose=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'directory'
		public Keyword getDirectoryKeyword_0() { return cDirectoryKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('has:'+ file=[File])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'has:'+
		public Keyword getHasKeyword_3_0() { return cHasKeyword_3_0; }
		
		//file=[File]
		public Assignment getFileAssignment_3_1() { return cFileAssignment_3_1; }
		
		//[File]
		public CrossReference getFileFileCrossReference_3_1_0() { return cFileFileCrossReference_3_1_0; }
		
		//ID
		public RuleCall getFileFileIDTerminalRuleCall_3_1_0_1() { return cFileFileIDTerminalRuleCall_3_1_0_1; }
		
		//('contains:' subdirectory=[Directory])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'contains:'
		public Keyword getContainsKeyword_4_0() { return cContainsKeyword_4_0; }
		
		//subdirectory=[Directory]
		public Assignment getSubdirectoryAssignment_4_1() { return cSubdirectoryAssignment_4_1; }
		
		//[Directory]
		public CrossReference getSubdirectoryDirectoryCrossReference_4_1_0() { return cSubdirectoryDirectoryCrossReference_4_1_0; }
		
		//ID
		public RuleCall getSubdirectoryDirectoryIDTerminalRuleCall_4_1_0_1() { return cSubdirectoryDirectoryIDTerminalRuleCall_4_1_0_1; }
		
		//'purpose:'
		public Keyword getPurposeKeyword_5() { return cPurposeKeyword_5; }
		
		//purpose=STRING
		public Assignment getPurposeAssignment_6() { return cPurposeAssignment_6; }
		
		//STRING
		public RuleCall getPurposeSTRINGTerminalRuleCall_6_0() { return cPurposeSTRINGTerminalRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.File");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMdParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cJsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCssParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//File:
		//	Md | Js | Json | Css;
		@Override public ParserRule getRule() { return rule; }
		
		//Md | Js | Json | Css
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Md
		public RuleCall getMdParserRuleCall_0() { return cMdParserRuleCall_0; }
		
		//Js
		public RuleCall getJsParserRuleCall_1() { return cJsParserRuleCall_1; }
		
		//Json
		public RuleCall getJsonParserRuleCall_2() { return cJsonParserRuleCall_2; }
		
		//Css
		public RuleCall getCssParserRuleCall_3() { return cCssParserRuleCall_3; }
	}
	public class MdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Md");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Md:
		//	'md' name=ID '{'
		//	'type:' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'md' name=ID '{' 'type:' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'md'
		public Keyword getMdKeyword_0() { return cMdKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type:'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class JsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Js");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Js:
		//	'js' name=ID '{'
		//	'type:' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'js' name=ID '{' 'type:' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'js'
		public Keyword getJsKeyword_0() { return cJsKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type:'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class JsonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Json");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJsonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Json:
		//	'json' name=ID '{'
		//	'type:' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'json' name=ID '{' 'type:' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'json'
		public Keyword getJsonKeyword_0() { return cJsonKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type:'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CssElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Css");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCssKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Css:
		//	'css' name=ID '{'
		//	'type:' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'css' name=ID '{' 'type:' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'css'
		public Keyword getCssKeyword_0() { return cCssKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type:'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHandleActionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cActionActionCrossReference_3_1_0 = (CrossReference)cActionAssignment_3_1.eContents().get(0);
		private final RuleCall cActionActionIDTerminalRuleCall_3_1_0_1 = (RuleCall)cActionActionCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHandleReducerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReducerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cReducerReducerCrossReference_4_1_0 = (CrossReference)cReducerAssignment_4_1.eContents().get(0);
		private final RuleCall cReducerReducerIDTerminalRuleCall_4_1_0_1 = (RuleCall)cReducerReducerCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//State:
		//	'state' name=ID '{' ('handleAction:' action=[Action])* ('handleReducer:' reducer=[Reducer])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'state' name=ID '{' ('handleAction:' action=[Action])* ('handleReducer:' reducer=[Reducer])* '}'
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('handleAction:' action=[Action])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'handleAction:'
		public Keyword getHandleActionKeyword_3_0() { return cHandleActionKeyword_3_0; }
		
		//action=[Action]
		public Assignment getActionAssignment_3_1() { return cActionAssignment_3_1; }
		
		//[Action]
		public CrossReference getActionActionCrossReference_3_1_0() { return cActionActionCrossReference_3_1_0; }
		
		//ID
		public RuleCall getActionActionIDTerminalRuleCall_3_1_0_1() { return cActionActionIDTerminalRuleCall_3_1_0_1; }
		
		//('handleReducer:' reducer=[Reducer])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'handleReducer:'
		public Keyword getHandleReducerKeyword_4_0() { return cHandleReducerKeyword_4_0; }
		
		//reducer=[Reducer]
		public Assignment getReducerAssignment_4_1() { return cReducerAssignment_4_1; }
		
		//[Reducer]
		public CrossReference getReducerReducerCrossReference_4_1_0() { return cReducerReducerCrossReference_4_1_0; }
		
		//ID
		public RuleCall getReducerReducerIDTerminalRuleCall_4_1_0_1() { return cReducerReducerIDTerminalRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCreateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActionCreatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cActionCreatorActionCreatorCrossReference_3_1_0 = (CrossReference)cActionCreatorAssignment_3_1.eContents().get(0);
		private final RuleCall cActionCreatorActionCreatorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cActionCreatorActionCreatorCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDispatchKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionDispatcherAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cActionDispatcherActionDispatcherCrossReference_4_1_0 = (CrossReference)cActionDispatcherAssignment_4_1.eContents().get(0);
		private final RuleCall cActionDispatcherActionDispatcherIDTerminalRuleCall_4_1_0_1 = (RuleCall)cActionDispatcherActionDispatcherCrossReference_4_1_0.eContents().get(1);
		private final Keyword cActionDirectoryKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDirAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDirDirectoryCrossReference_6_0 = (CrossReference)cDirAssignment_6.eContents().get(0);
		private final RuleCall cDirDirectoryIDTerminalRuleCall_6_0_1 = (RuleCall)cDirDirectoryCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Action:
		//	'action' name=ID '{' ('create:' actionCreator=[ActionCreator])* ('dispatch:' actionDispatcher=[ActionDispatcher])*
		//	'actionDirectory:' dir=[Directory]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'action' name=ID '{' ('create:' actionCreator=[ActionCreator])* ('dispatch:' actionDispatcher=[ActionDispatcher])*
		//'actionDirectory:' dir=[Directory] '}'
		public Group getGroup() { return cGroup; }
		
		//'action'
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('create:' actionCreator=[ActionCreator])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'create:'
		public Keyword getCreateKeyword_3_0() { return cCreateKeyword_3_0; }
		
		//actionCreator=[ActionCreator]
		public Assignment getActionCreatorAssignment_3_1() { return cActionCreatorAssignment_3_1; }
		
		//[ActionCreator]
		public CrossReference getActionCreatorActionCreatorCrossReference_3_1_0() { return cActionCreatorActionCreatorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getActionCreatorActionCreatorIDTerminalRuleCall_3_1_0_1() { return cActionCreatorActionCreatorIDTerminalRuleCall_3_1_0_1; }
		
		//('dispatch:' actionDispatcher=[ActionDispatcher])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'dispatch:'
		public Keyword getDispatchKeyword_4_0() { return cDispatchKeyword_4_0; }
		
		//actionDispatcher=[ActionDispatcher]
		public Assignment getActionDispatcherAssignment_4_1() { return cActionDispatcherAssignment_4_1; }
		
		//[ActionDispatcher]
		public CrossReference getActionDispatcherActionDispatcherCrossReference_4_1_0() { return cActionDispatcherActionDispatcherCrossReference_4_1_0; }
		
		//ID
		public RuleCall getActionDispatcherActionDispatcherIDTerminalRuleCall_4_1_0_1() { return cActionDispatcherActionDispatcherIDTerminalRuleCall_4_1_0_1; }
		
		//'actionDirectory:'
		public Keyword getActionDirectoryKeyword_5() { return cActionDirectoryKeyword_5; }
		
		//dir=[Directory]
		public Assignment getDirAssignment_6() { return cDirAssignment_6; }
		
		//[Directory]
		public CrossReference getDirDirectoryCrossReference_6_0() { return cDirDirectoryCrossReference_6_0; }
		
		//ID
		public RuleCall getDirDirectoryIDTerminalRuleCall_6_0_1() { return cDirDirectoryIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ActionCreatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ActionCreator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionCreatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSTRINGTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ActionCreator:
		//	'actionCreator' name=ID '{'
		//	'type:' type=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'actionCreator' name=ID '{' 'type:' type=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'actionCreator'
		public Keyword getActionCreatorKeyword_0() { return cActionCreatorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type:'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=STRING
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_4_0() { return cTypeSTRINGTerminalRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ActionDispatcherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ActionDispatcher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionDispatcherKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeActionCreatorCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeActionCreatorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cTypeActionCreatorCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ActionDispatcher:
		//	'actionDispatcher' name=ID '{' ('use:' type=[ActionCreator])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'actionDispatcher' name=ID '{' ('use:' type=[ActionCreator])* '}'
		public Group getGroup() { return cGroup; }
		
		//'actionDispatcher'
		public Keyword getActionDispatcherKeyword_0() { return cActionDispatcherKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('use:' type=[ActionCreator])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'use:'
		public Keyword getUseKeyword_3_0() { return cUseKeyword_3_0; }
		
		//type=[ActionCreator]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//[ActionCreator]
		public CrossReference getTypeActionCreatorCrossReference_3_1_0() { return cTypeActionCreatorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getTypeActionCreatorIDTerminalRuleCall_3_1_0_1() { return cTypeActionCreatorIDTerminalRuleCall_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ReducerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Reducer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReducerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCatchKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeActionCreatorCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeActionCreatorIDTerminalRuleCall_3_1_0_1 = (RuleCall)cTypeActionCreatorCrossReference_3_1_0.eContents().get(1);
		private final Keyword cReducerDirectoryKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTypeDirectoryCrossReference_5_0 = (CrossReference)cTypeAssignment_5.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_5_0_1 = (RuleCall)cTypeDirectoryCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Reducer:
		//	'reducer' name=ID '{' ('catch:' type=[ActionCreator])+
		//	'reducerDirectory:' type=[Directory]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'reducer' name=ID '{' ('catch:' type=[ActionCreator])+ 'reducerDirectory:' type=[Directory] '}'
		public Group getGroup() { return cGroup; }
		
		//'reducer'
		public Keyword getReducerKeyword_0() { return cReducerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('catch:' type=[ActionCreator])+
		public Group getGroup_3() { return cGroup_3; }
		
		//'catch:'
		public Keyword getCatchKeyword_3_0() { return cCatchKeyword_3_0; }
		
		//type=[ActionCreator]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//[ActionCreator]
		public CrossReference getTypeActionCreatorCrossReference_3_1_0() { return cTypeActionCreatorCrossReference_3_1_0; }
		
		//ID
		public RuleCall getTypeActionCreatorIDTerminalRuleCall_3_1_0_1() { return cTypeActionCreatorIDTerminalRuleCall_3_1_0_1; }
		
		//'reducerDirectory:'
		public Keyword getReducerDirectoryKeyword_4() { return cReducerDirectoryKeyword_4; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_5_0() { return cTypeDirectoryCrossReference_5_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_5_0_1() { return cTypeDirectoryIDTerminalRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class JsModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JsModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPresentInKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeDirectoryCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeDirectoryIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeDirectoryCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//JsModule:
		//	'module' name=ID '{'
		//	'presentIn:' type=[Directory]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=ID '{' 'presentIn:' type=[Directory] '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'presentIn:'
		public Keyword getPresentInKeyword_3() { return cPresentInKeyword_3; }
		
		//type=[Directory]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[Directory]
		public CrossReference getTypeDirectoryCrossReference_4_0() { return cTypeDirectoryCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeDirectoryIDTerminalRuleCall_4_0_1() { return cTypeDirectoryIDTerminalRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class JsMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JsMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cJsMethodTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeJsMethodTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cArgumentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cArgumentsJsMethodArgsParserRuleCall_5_0 = (RuleCall)cArgumentsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReturnsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cBooleanParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////----------
		//JsMethod:
		//	'method' name=ID '{'
		//	'jsMethodType:' type=JsMethodType
		//	arguments+=JsMethodArgs* ('returns:' Boolean)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'method' name=ID '{' 'jsMethodType:' type=JsMethodType arguments+=JsMethodArgs* ('returns:' Boolean)? '}'
		public Group getGroup() { return cGroup; }
		
		//'method'
		public Keyword getMethodKeyword_0() { return cMethodKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'jsMethodType:'
		public Keyword getJsMethodTypeKeyword_3() { return cJsMethodTypeKeyword_3; }
		
		//type=JsMethodType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//JsMethodType
		public RuleCall getTypeJsMethodTypeParserRuleCall_4_0() { return cTypeJsMethodTypeParserRuleCall_4_0; }
		
		//arguments+=JsMethodArgs*
		public Assignment getArgumentsAssignment_5() { return cArgumentsAssignment_5; }
		
		//JsMethodArgs
		public RuleCall getArgumentsJsMethodArgsParserRuleCall_5_0() { return cArgumentsJsMethodArgsParserRuleCall_5_0; }
		
		//('returns:' Boolean)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'returns:'
		public Keyword getReturnsKeyword_6_0() { return cReturnsKeyword_6_0; }
		
		//Boolean
		public RuleCall getBooleanParserRuleCall_6_1() { return cBooleanParserRuleCall_6_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class JsMethodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JsMethodType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cReactConstructorKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cReactRenderKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cReactLifecycleKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cCustomJsMethodKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//JsMethodType:
		//	'reactConstructor' | 'reactRender' | 'reactLifecycle' | 'customJsMethod';
		@Override public ParserRule getRule() { return rule; }
		
		//'reactConstructor' | 'reactRender' | 'reactLifecycle' | 'customJsMethod'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'reactConstructor'
		public Keyword getReactConstructorKeyword_0() { return cReactConstructorKeyword_0; }
		
		//'reactRender'
		public Keyword getReactRenderKeyword_1() { return cReactRenderKeyword_1; }
		
		//'reactLifecycle'
		public Keyword getReactLifecycleKeyword_2() { return cReactLifecycleKeyword_2; }
		
		//'customJsMethod'
		public Keyword getCustomJsMethodKeyword_3() { return cCustomJsMethodKeyword_3; }
	}
	public class JsMethodArgsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.JsMethodArgs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJsmethodArgumentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//JsMethodArgs:
		//	'jsmethodArgument' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'jsmethodArgument' name=ID
		public Group getGroup() { return cGroup; }
		
		//'jsmethodArgument'
		public Keyword getJsmethodArgumentKeyword_0() { return cJsmethodArgumentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class AxiosRequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AxiosRequest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAxiosRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRestMethodKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAxiosRestMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cAxiosRestMethodAlternatives_4_0 = (Alternatives)cAxiosRestMethodAssignment_4.eContents().get(0);
		private final Keyword cAxiosRestMethodGetMethodKeyword_4_0_0 = (Keyword)cAxiosRestMethodAlternatives_4_0.eContents().get(0);
		private final Keyword cAxiosRestMethodPostMethodKeyword_4_0_1 = (Keyword)cAxiosRestMethodAlternatives_4_0.eContents().get(1);
		private final Keyword cURLKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlSTRINGTerminalRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDataKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDataAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDataJsMethodArgsParserRuleCall_7_1_0 = (RuleCall)cDataAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AxiosRequest:
		//	'axiosRequest' name=ID '{'
		//	'restMethod:' axiosRestMethod=('getMethod' | 'postMethod')
		//	'URL:' url=STRING ('data:' data=JsMethodArgs)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'axiosRequest' name=ID '{' 'restMethod:' axiosRestMethod=('getMethod' | 'postMethod') 'URL:' url=STRING ('data:'
		//data=JsMethodArgs)? '}'
		public Group getGroup() { return cGroup; }
		
		//'axiosRequest'
		public Keyword getAxiosRequestKeyword_0() { return cAxiosRequestKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'restMethod:'
		public Keyword getRestMethodKeyword_3() { return cRestMethodKeyword_3; }
		
		//axiosRestMethod=('getMethod' | 'postMethod')
		public Assignment getAxiosRestMethodAssignment_4() { return cAxiosRestMethodAssignment_4; }
		
		//('getMethod' | 'postMethod')
		public Alternatives getAxiosRestMethodAlternatives_4_0() { return cAxiosRestMethodAlternatives_4_0; }
		
		//'getMethod'
		public Keyword getAxiosRestMethodGetMethodKeyword_4_0_0() { return cAxiosRestMethodGetMethodKeyword_4_0_0; }
		
		//'postMethod'
		public Keyword getAxiosRestMethodPostMethodKeyword_4_0_1() { return cAxiosRestMethodPostMethodKeyword_4_0_1; }
		
		//'URL:'
		public Keyword getURLKeyword_5() { return cURLKeyword_5; }
		
		//url=STRING
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_6_0() { return cUrlSTRINGTerminalRuleCall_6_0; }
		
		//('data:' data=JsMethodArgs)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'data:'
		public Keyword getDataKeyword_7_0() { return cDataKeyword_7_0; }
		
		//data=JsMethodArgs
		public Assignment getDataAssignment_7_1() { return cDataAssignment_7_1; }
		
		//JsMethodArgs
		public RuleCall getDataJsMethodArgsParserRuleCall_7_1_0() { return cDataJsMethodArgsParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	private final SystemElements pSystem;
	private final DomainElements pDomain;
	private final ModuleElements pModule;
	private final SubmoduleElements pSubmodule;
	private final OperationElements pOperation;
	private final EntityNameElements pEntityName;
	private final SubOperationElements pSubOperation;
	private final GeneralEntityElements pGeneralEntity;
	private final PropertyElements pProperty;
	private final TypeElements pType;
	private final SpecialEntityElements pSpecialEntity;
	private final TransactionElements pTransaction;
	private final SubTransactionElements pSubTransaction;
	private final OperatesonElements pOperateson;
	private final RelationDomElements pRelationDom;
	private final ArchitectureElements pArchitecture;
	private final ComponentElements pComponent;
	private final ComponentNameElements pComponentName;
	private final LayerElements pLayer;
	private final LayerNameElements pLayerName;
	private final LayerSegmentElements pLayerSegment;
	private final LayerSegmentRelationElements pLayerSegmentRelation;
	private final LayerSegmentNameElements pLayerSegmentName;
	private final SublayerSegmentElements pSublayerSegment;
	private final SublayerSegmentNameElements pSublayerSegmentName;
	private final RelationArchElements pRelationArch;
	private final TechnologyElements pTechnology;
	private final JavaAppElements pJavaApp;
	private final JeeProjectElements pJeeProject;
	private final SubprojectElements pSubproject;
	private final AbstractClassElements pAbstractClass;
	private final GenericClassElements pGenericClass;
	private final EinterfaceElements pEinterface;
	private final NativeClassElements pNativeClass;
	private final EclassElements pEclass;
	private final AttributeElements pAttribute;
	private final EpackageElements pEpackage;
	private final MethodBackElements pMethodBack;
	private final AbstractMethodElements pAbstractMethod;
	private final DescriptorElements pDescriptor;
	private final AnnotationElements pAnnotation;
	private final LibraryElements pLibrary;
	private final BooleanElements pBoolean;
	private final AbstractFrontElementElements pAbstractFrontElement;
	private final ReactAppElements pReactApp;
	private final FunctionalityElements pFunctionality;
	private final RouterComponentElements pRouterComponent;
	private final UIComponentElements pUIComponent;
	private final ContainerElements pContainer;
	private final VisualizerElements pVisualizer;
	private final ServiceFrontElements pServiceFront;
	private final DirectoryElements pDirectory;
	private final FileElements pFile;
	private final MdElements pMd;
	private final JsElements pJs;
	private final JsonElements pJson;
	private final CssElements pCss;
	private final StateElements pState;
	private final ActionElements pAction;
	private final ActionCreatorElements pActionCreator;
	private final ActionDispatcherElements pActionDispatcher;
	private final ReducerElements pReducer;
	private final JsModuleElements pJsModule;
	private final JsMethodElements pJsMethod;
	private final JsMethodTypeElements pJsMethodType;
	private final JsMethodArgsElements pJsMethodArgs;
	private final AxiosRequestElements pAxiosRequest;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSystem = new SystemElements();
		this.pDomain = new DomainElements();
		this.pModule = new ModuleElements();
		this.pSubmodule = new SubmoduleElements();
		this.pOperation = new OperationElements();
		this.pEntityName = new EntityNameElements();
		this.pSubOperation = new SubOperationElements();
		this.pGeneralEntity = new GeneralEntityElements();
		this.pProperty = new PropertyElements();
		this.pType = new TypeElements();
		this.pSpecialEntity = new SpecialEntityElements();
		this.pTransaction = new TransactionElements();
		this.pSubTransaction = new SubTransactionElements();
		this.pOperateson = new OperatesonElements();
		this.pRelationDom = new RelationDomElements();
		this.pArchitecture = new ArchitectureElements();
		this.pComponent = new ComponentElements();
		this.pComponentName = new ComponentNameElements();
		this.pLayer = new LayerElements();
		this.pLayerName = new LayerNameElements();
		this.pLayerSegment = new LayerSegmentElements();
		this.pLayerSegmentRelation = new LayerSegmentRelationElements();
		this.pLayerSegmentName = new LayerSegmentNameElements();
		this.pSublayerSegment = new SublayerSegmentElements();
		this.pSublayerSegmentName = new SublayerSegmentNameElements();
		this.pRelationArch = new RelationArchElements();
		this.pTechnology = new TechnologyElements();
		this.pJavaApp = new JavaAppElements();
		this.pJeeProject = new JeeProjectElements();
		this.pSubproject = new SubprojectElements();
		this.pAbstractClass = new AbstractClassElements();
		this.pGenericClass = new GenericClassElements();
		this.pEinterface = new EinterfaceElements();
		this.pNativeClass = new NativeClassElements();
		this.pEclass = new EclassElements();
		this.pAttribute = new AttributeElements();
		this.pEpackage = new EpackageElements();
		this.pMethodBack = new MethodBackElements();
		this.pAbstractMethod = new AbstractMethodElements();
		this.pDescriptor = new DescriptorElements();
		this.pAnnotation = new AnnotationElements();
		this.pLibrary = new LibraryElements();
		this.pBoolean = new BooleanElements();
		this.pAbstractFrontElement = new AbstractFrontElementElements();
		this.pReactApp = new ReactAppElements();
		this.pFunctionality = new FunctionalityElements();
		this.pRouterComponent = new RouterComponentElements();
		this.pUIComponent = new UIComponentElements();
		this.pContainer = new ContainerElements();
		this.pVisualizer = new VisualizerElements();
		this.pServiceFront = new ServiceFrontElements();
		this.pDirectory = new DirectoryElements();
		this.pFile = new FileElements();
		this.pMd = new MdElements();
		this.pJs = new JsElements();
		this.pJson = new JsonElements();
		this.pCss = new CssElements();
		this.pState = new StateElements();
		this.pAction = new ActionElements();
		this.pActionCreator = new ActionCreatorElements();
		this.pActionDispatcher = new ActionDispatcherElements();
		this.pReducer = new ReducerElements();
		this.pJsModule = new JsModuleElements();
		this.pJsMethod = new JsMethodElements();
		this.pJsMethodType = new JsMethodTypeElements();
		this.pJsMethodArgs = new JsMethodArgsElements();
		this.pAxiosRequest = new AxiosRequestElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////---------------------- System ------------------------------------------------
	//System:
	//	'Casino' '{'
	//	dom=Domain
	//	arch=Architecture
	//	tech=Technology
	//	'}';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	//// --------------------- Domain ------------------------------------------------
	//Domain:
	//	'domain' '{'
	//	types+=Type*
	//	modules+=Module+
	//	relations+=RelationDom+
	//	'}';
	public DomainElements getDomainAccess() {
		return pDomain;
	}
	
	public ParserRule getDomainRule() {
		return getDomainAccess().getRule();
	}
	
	//Module:
	//	'module' name=ID '{'
	//	submodules+=Submodule+
	//	'}';
	public ModuleElements getModuleAccess() {
		return pModule;
	}
	
	public ParserRule getModuleRule() {
		return getModuleAccess().getRule();
	}
	
	//Submodule:
	//	'submodule' name=ID '{'
	//	operations+=Operation+
	//	entities+=(GeneralEntity | SpecialEntity)+
	//	'}';
	public SubmoduleElements getSubmoduleAccess() {
		return pSubmodule;
	}
	
	public ParserRule getSubmoduleRule() {
		return getSubmoduleAccess().getRule();
	}
	
	//Operation:
	//	'op' '{'
	//	'type:' type=SubOperation
	//	'operates_on:' target+=EntityName
	//	'}';
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//EntityName:
	//	name=ID;
	public EntityNameElements getEntityNameAccess() {
		return pEntityName;
	}
	
	public ParserRule getEntityNameRule() {
		return getEntityNameAccess().getRule();
	}
	
	//SubOperation:
	//	'Read' | 'Create';
	public SubOperationElements getSubOperationAccess() {
		return pSubOperation;
	}
	
	public ParserRule getSubOperationRule() {
		return getSubOperationAccess().getRule();
	}
	
	//GeneralEntity:
	//	'generalEntity' name=EntityName '{'
	//	properties+=Property+
	//	'}';
	public GeneralEntityElements getGeneralEntityAccess() {
		return pGeneralEntity;
	}
	
	public ParserRule getGeneralEntityRule() {
		return getGeneralEntityAccess().getRule();
	}
	
	//Property:
	//	name=ID ':' type=[Type];
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//Type:
	//	'dataType' name=ID;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//SpecialEntity:
	//	'specialEntity' name=EntityName '{'
	//	properties+=Property+
	//	transactions+=Transaction+
	//	'}';
	public SpecialEntityElements getSpecialEntityAccess() {
		return pSpecialEntity;
	}
	
	public ParserRule getSpecialEntityRule() {
		return getSpecialEntityAccess().getRule();
	}
	
	//Transaction:
	//	'trx' '{'
	//	'type:' type=SubTransaction
	//	operateson+=Operateson+
	//	'}';
	public TransactionElements getTransactionAccess() {
		return pTransaction;
	}
	
	public ParserRule getTransactionRule() {
		return getTransactionAccess().getRule();
	}
	
	//SubTransaction:
	//	'exchange' | 'sale';
	public SubTransactionElements getSubTransactionAccess() {
		return pSubTransaction;
	}
	
	public ParserRule getSubTransactionRule() {
		return getSubTransactionAccess().getRule();
	}
	
	//Operateson:
	//	'operates_on:' operateson+=EntityName;
	public OperatesonElements getOperatesonAccess() {
		return pOperateson;
	}
	
	public ParserRule getOperatesonRule() {
		return getOperatesonAccess().getRule();
	}
	
	//RelationDom:
	//	'rel' '{'
	//	'type:' 'Composition'
	//	'source:' source+=EntityName
	//	'target:' target+=EntityName
	//	'}';
	public RelationDomElements getRelationDomAccess() {
		return pRelationDom;
	}
	
	public ParserRule getRelationDomRule() {
		return getRelationDomAccess().getRule();
	}
	
	//// --------------------- Architecture ----------------------------------------------
	//Architecture:
	//	'arch' '{'
	//	componentes+=Component+
	//	relationArch+=RelationArch+
	//	'}';
	public ArchitectureElements getArchitectureAccess() {
		return pArchitecture;
	}
	
	public ParserRule getArchitectureRule() {
		return getArchitectureAccess().getRule();
	}
	
	//Component:
	//	'component' name=ComponentName '{'
	//	layer+=Layer+
	//	'}';
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//ComponentName:
	//	'Back' | 'Front';
	public ComponentNameElements getComponentNameAccess() {
		return pComponentName;
	}
	
	public ParserRule getComponentNameRule() {
		return getComponentNameAccess().getRule();
	}
	
	//Layer:
	//	'layer' name=LayerName '{'
	//	layerSegments+=LayerSegment*
	//	'}';
	public LayerElements getLayerAccess() {
		return pLayer;
	}
	
	public ParserRule getLayerRule() {
		return getLayerAccess().getRule();
	}
	
	//LayerName:
	//	'JavaScript' | 'Ejb' | 'War';
	public LayerNameElements getLayerNameAccess() {
		return pLayerName;
	}
	
	public ParserRule getLayerNameRule() {
		return getLayerNameAccess().getRule();
	}
	
	//LayerSegment:
	//	'layerSegment' name=LayerSegmentName '{' ('{' relations+=LayerSegmentRelation* '}')?
	//	sublayerSegments+=SublayerSegment*
	//	'}';
	public LayerSegmentElements getLayerSegmentAccess() {
		return pLayerSegment;
	}
	
	public ParserRule getLayerSegmentRule() {
		return getLayerSegmentAccess().getRule();
	}
	
	//LayerSegmentRelation:
	//	'allowedToUse:' layerSegment=LayerSegmentName;
	public LayerSegmentRelationElements getLayerSegmentRelationAccess() {
		return pLayerSegmentRelation;
	}
	
	public ParserRule getLayerSegmentRelationRule() {
		return getLayerSegmentRelationAccess().getRule();
	}
	
	//LayerSegmentName:
	//	'Services' | 'Ui' | 'Store' | 'RestEntity' | 'Pojo' | 'Facade' | 'Dto' | 'Util' | 'Containers';
	public LayerSegmentNameElements getLayerSegmentNameAccess() {
		return pLayerSegmentName;
	}
	
	public ParserRule getLayerSegmentNameRule() {
		return getLayerSegmentNameAccess().getRule();
	}
	
	//SublayerSegment:
	//	'sublayerSegment' name=SublayerSegmentName;
	public SublayerSegmentElements getSublayerSegmentAccess() {
		return pSublayerSegment;
	}
	
	public ParserRule getSublayerSegmentRule() {
		return getSublayerSegmentAccess().getRule();
	}
	
	//SublayerSegmentName:
	//	'Actions' | 'Reducers';
	public SublayerSegmentNameElements getSublayerSegmentNameAccess() {
		return pSublayerSegmentName;
	}
	
	public ParserRule getSublayerSegmentNameRule() {
		return getSublayerSegmentNameAccess().getRule();
	}
	
	//RelationArch:
	//	'relationArch' name=ID '{'
	//	'source:' source=LayerName ','
	//	'target:' target=LayerName
	//	'}';
	public RelationArchElements getRelationArchAccess() {
		return pRelationArch;
	}
	
	public ParserRule getRelationArchRule() {
		return getRelationArchAccess().getRule();
	}
	
	//// --------------------- Technology ------------------------------------------------
	//Technology:
	//	'tech' '{'
	//	java=JavaApp
	//	react=ReactApp
	//	'}';
	public TechnologyElements getTechnologyAccess() {
		return pTechnology;
	}
	
	public ParserRule getTechnologyRule() {
		return getTechnologyAccess().getRule();
	}
	
	//// --------------------- Backend----- ----------------------------------------------
	//JavaApp:
	//	'javaApp' '{'
	//	jeeproject+=JeeProject
	//	'}';
	public JavaAppElements getJavaAppAccess() {
		return pJavaApp;
	}
	
	public ParserRule getJavaAppRule() {
		return getJavaAppAccess().getRule();
	}
	
	//JeeProject:
	//	'jeeProject' name=ID '{'
	//	subproject+=Subproject+
	//	'}';
	public JeeProjectElements getJeeProjectAccess() {
		return pJeeProject;
	}
	
	public ParserRule getJeeProjectRule() {
		return getJeeProjectAccess().getRule();
	}
	
	//Subproject:
	//	'subproject' name=ID '{'
	//	epackage+=Epackage+ ','
	//	library+=Library+ ','
	//	descriptor+=Descriptor+
	//	'}';
	public SubprojectElements getSubprojectAccess() {
		return pSubproject;
	}
	
	public ParserRule getSubprojectRule() {
		return getSubprojectAccess().getRule();
	}
	
	//AbstractClass:
	//	'abstractClass' name=ID '{'
	//	attribute+=Attribute*
	//	methodClass+=MethodBack* ('use :' annotation=[Annotation])*
	//	abstractMethod+=AbstractMethod*
	//	'}';
	public AbstractClassElements getAbstractClassAccess() {
		return pAbstractClass;
	}
	
	public ParserRule getAbstractClassRule() {
		return getAbstractClassAccess().getRule();
	}
	
	//GenericClass:
	//	'genericClass' name=ID '{'
	//	attribute+=Attribute*
	//	methodClass+=MethodBack* ('use :' annotation=[Annotation])* ('extends :' abs=[AbstractClass])? ('implements :'
	//	imp=[Einterface])*
	//	'}';
	public GenericClassElements getGenericClassAccess() {
		return pGenericClass;
	}
	
	public ParserRule getGenericClassRule() {
		return getGenericClassAccess().getRule();
	}
	
	//Einterface:
	//	'eInterface' name=ID '{'
	//	attribute+=Attribute*
	//	abstractMethod+=AbstractMethod*
	//	'}';
	public EinterfaceElements getEinterfaceAccess() {
		return pEinterface;
	}
	
	public ParserRule getEinterfaceRule() {
		return getEinterfaceAccess().getRule();
	}
	
	//NativeClass:
	//	'nativeClass' name=ID '{'
	//	attribute+=Attribute*
	//	methodClass+=MethodBack*
	//	'}';
	public NativeClassElements getNativeClassAccess() {
		return pNativeClass;
	}
	
	public ParserRule getNativeClassRule() {
		return getNativeClassAccess().getRule();
	}
	
	//Eclass:
	//	AbstractClass | GenericClass | NativeClass | Annotation;
	public EclassElements getEclassAccess() {
		return pEclass;
	}
	
	public ParserRule getEclassRule() {
		return getEclassAccess().getRule();
	}
	
	//Attribute:
	//	'attribute' name=ID ':' type=[Eclass];
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Epackage:
	//	'epackage' name=ID '{'
	//	eclass+=Eclass*
	//	'}';
	public EpackageElements getEpackageAccess() {
		return pEpackage;
	}
	
	public ParserRule getEpackageRule() {
		return getEpackageAccess().getRule();
	}
	
	//MethodBack:
	//	'methodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])?
	//	'}';
	public MethodBackElements getMethodBackAccess() {
		return pMethodBack;
	}
	
	public ParserRule getMethodBackRule() {
		return getMethodBackAccess().getRule();
	}
	
	//AbstractMethod:
	//	'abstractMethodBack' name=ID '{' ('argument' arg=[Eclass])* ('return' type=[Eclass])?
	//	'}';
	public AbstractMethodElements getAbstractMethodAccess() {
		return pAbstractMethod;
	}
	
	public ParserRule getAbstractMethodRule() {
		return getAbstractMethodAccess().getRule();
	}
	
	//Descriptor:
	//	'descriptor' name=ID '{'
	//	'path' path=STRING
	//	'}';
	public DescriptorElements getDescriptorAccess() {
		return pDescriptor;
	}
	
	public ParserRule getDescriptorRule() {
		return getDescriptorAccess().getRule();
	}
	
	//Annotation:
	//	'annotation' name=ID '{' ('propertie' propertie=STRING)*
	//	'}';
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//Library:
	//	'library' name=ID '{'
	//	'isNative' isNative=Boolean
	//	annotation+=Annotation*
	//	'}';
	public LibraryElements getLibraryAccess() {
		return pLibrary;
	}
	
	public ParserRule getLibraryRule() {
		return getLibraryAccess().getRule();
	}
	
	//Boolean:
	//	'true' | 'false';
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}
	
	//// --------------------- Frontend---- ----------------------------------------------
	//AbstractFrontElement:
	//	ReactApp | Functionality | Directory | JsModule | Type | RouterComponent | Container | Visualizer | ServiceFront |
	//	File | State | Action | ActionCreator | ActionDispatcher | Reducer | AxiosRequest;
	public AbstractFrontElementElements getAbstractFrontElementAccess() {
		return pAbstractFrontElement;
	}
	
	public ParserRule getAbstractFrontElementRule() {
		return getAbstractFrontElementAccess().getRule();
	}
	
	//ReactApp:
	//	'reactApp' '{'
	//	elements+=AbstractFrontElement+ ('performs:' func=[Functionality])+ ('holds:' dir=[Directory])+ ('use:'
	//	mod=[JsModule])+
	//	'}';
	public ReactAppElements getReactAppAccess() {
		return pReactApp;
	}
	
	public ParserRule getReactAppRule() {
		return getReactAppAccess().getRule();
	}
	
	//Functionality:
	//	'functionality' name=ID '{' ('uses:' route=[RouterComponent])* ('wraps:' wrap=[Container])* ('render:'
	//	render=[Visualizer])+ ('state:' state=[State])* ('calls:' service=[ServiceFront])*
	//	'organizedBy:' type=[Directory]
	//	'}';
	public FunctionalityElements getFunctionalityAccess() {
		return pFunctionality;
	}
	
	public ParserRule getFunctionalityRule() {
		return getFunctionalityAccess().getRule();
	}
	
	//RouterComponent:
	//	'router' name=ID '{'
	//	'inWithin:' type=[Directory]
	//	'use:' type=[JsModule]
	//	'route:' route=[UIComponent]
	//	'}';
	public RouterComponentElements getRouterComponentAccess() {
		return pRouterComponent;
	}
	
	public ParserRule getRouterComponentRule() {
		return getRouterComponentAccess().getRule();
	}
	
	//UIComponent:
	//	RouterComponent | Visualizer;
	public UIComponentElements getUIComponentAccess() {
		return pUIComponent;
	}
	
	public ParserRule getUIComponentRule() {
		return getUIComponentAccess().getRule();
	}
	
	//Container:
	//	'container' name=ID '{'
	//	'inWithin:' type=[Directory] ('dispatch:' type=[ActionDispatcher])? ('map:' type=[Reducer])*
	//	'use:' type=[JsModule]
	//	'}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//Visualizer:
	//	'visualizer' name=ID '{'
	//	'inWithin:' type=[Directory] ('use:' type=[JsModule])+
	//	methods+=JsMethod+
	//	'}';
	public VisualizerElements getVisualizerAccess() {
		return pVisualizer;
	}
	
	public ParserRule getVisualizerRule() {
		return getVisualizerAccess().getRule();
	}
	
	//ServiceFront:
	//	'service' name=ID '{'
	//	'use:' type=[JsModule] ('method:' method=STRING)+
	//	requests+=AxiosRequest+
	//	'}';
	public ServiceFrontElements getServiceFrontAccess() {
		return pServiceFront;
	}
	
	public ParserRule getServiceFrontRule() {
		return getServiceFrontAccess().getRule();
	}
	
	//Directory:
	//	'directory' name=ID '{' ('has:'+ file=[File])* ('contains:' subdirectory=[Directory])*
	//	'purpose:' purpose=STRING
	//	'}';
	public DirectoryElements getDirectoryAccess() {
		return pDirectory;
	}
	
	public ParserRule getDirectoryRule() {
		return getDirectoryAccess().getRule();
	}
	
	//File:
	//	Md | Js | Json | Css;
	public FileElements getFileAccess() {
		return pFile;
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}
	
	//Md:
	//	'md' name=ID '{'
	//	'type:' type=STRING
	//	'}';
	public MdElements getMdAccess() {
		return pMd;
	}
	
	public ParserRule getMdRule() {
		return getMdAccess().getRule();
	}
	
	//Js:
	//	'js' name=ID '{'
	//	'type:' type=STRING
	//	'}';
	public JsElements getJsAccess() {
		return pJs;
	}
	
	public ParserRule getJsRule() {
		return getJsAccess().getRule();
	}
	
	//Json:
	//	'json' name=ID '{'
	//	'type:' type=STRING
	//	'}';
	public JsonElements getJsonAccess() {
		return pJson;
	}
	
	public ParserRule getJsonRule() {
		return getJsonAccess().getRule();
	}
	
	//Css:
	//	'css' name=ID '{'
	//	'type:' type=STRING
	//	'}';
	public CssElements getCssAccess() {
		return pCss;
	}
	
	public ParserRule getCssRule() {
		return getCssAccess().getRule();
	}
	
	//State:
	//	'state' name=ID '{' ('handleAction:' action=[Action])* ('handleReducer:' reducer=[Reducer])*
	//	'}';
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Action:
	//	'action' name=ID '{' ('create:' actionCreator=[ActionCreator])* ('dispatch:' actionDispatcher=[ActionDispatcher])*
	//	'actionDirectory:' dir=[Directory]
	//	'}';
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//ActionCreator:
	//	'actionCreator' name=ID '{'
	//	'type:' type=STRING
	//	'}';
	public ActionCreatorElements getActionCreatorAccess() {
		return pActionCreator;
	}
	
	public ParserRule getActionCreatorRule() {
		return getActionCreatorAccess().getRule();
	}
	
	//ActionDispatcher:
	//	'actionDispatcher' name=ID '{' ('use:' type=[ActionCreator])*
	//	'}';
	public ActionDispatcherElements getActionDispatcherAccess() {
		return pActionDispatcher;
	}
	
	public ParserRule getActionDispatcherRule() {
		return getActionDispatcherAccess().getRule();
	}
	
	//Reducer:
	//	'reducer' name=ID '{' ('catch:' type=[ActionCreator])+
	//	'reducerDirectory:' type=[Directory]
	//	'}';
	public ReducerElements getReducerAccess() {
		return pReducer;
	}
	
	public ParserRule getReducerRule() {
		return getReducerAccess().getRule();
	}
	
	//JsModule:
	//	'module' name=ID '{'
	//	'presentIn:' type=[Directory]
	//	'}';
	public JsModuleElements getJsModuleAccess() {
		return pJsModule;
	}
	
	public ParserRule getJsModuleRule() {
		return getJsModuleAccess().getRule();
	}
	
	////----------
	//JsMethod:
	//	'method' name=ID '{'
	//	'jsMethodType:' type=JsMethodType
	//	arguments+=JsMethodArgs* ('returns:' Boolean)?
	//	'}';
	public JsMethodElements getJsMethodAccess() {
		return pJsMethod;
	}
	
	public ParserRule getJsMethodRule() {
		return getJsMethodAccess().getRule();
	}
	
	//JsMethodType:
	//	'reactConstructor' | 'reactRender' | 'reactLifecycle' | 'customJsMethod';
	public JsMethodTypeElements getJsMethodTypeAccess() {
		return pJsMethodType;
	}
	
	public ParserRule getJsMethodTypeRule() {
		return getJsMethodTypeAccess().getRule();
	}
	
	//JsMethodArgs:
	//	'jsmethodArgument' name=ID;
	public JsMethodArgsElements getJsMethodArgsAccess() {
		return pJsMethodArgs;
	}
	
	public ParserRule getJsMethodArgsRule() {
		return getJsMethodArgsAccess().getRule();
	}
	
	//AxiosRequest:
	//	'axiosRequest' name=ID '{'
	//	'restMethod:' axiosRestMethod=('getMethod' | 'postMethod')
	//	'URL:' url=STRING ('data:' data=JsMethodArgs)?
	//	'}';
	public AxiosRequestElements getAxiosRequestAccess() {
		return pAxiosRequest;
	}
	
	public ParserRule getAxiosRequestRule() {
		return getAxiosRequestAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
