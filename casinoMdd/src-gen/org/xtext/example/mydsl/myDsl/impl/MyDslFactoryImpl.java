/**
 * generated by Xtext 2.18.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.AbstractClass;
import org.xtext.example.mydsl.myDsl.AbstractFrontElement;
import org.xtext.example.mydsl.myDsl.AbstractMethod;
import org.xtext.example.mydsl.myDsl.Action;
import org.xtext.example.mydsl.myDsl.ActionCreator;
import org.xtext.example.mydsl.myDsl.ActionDispatcher;
import org.xtext.example.mydsl.myDsl.Annotation;
import org.xtext.example.mydsl.myDsl.Architecture;
import org.xtext.example.mydsl.myDsl.Attribute;
import org.xtext.example.mydsl.myDsl.AxiosRequest;
import org.xtext.example.mydsl.myDsl.Component;
import org.xtext.example.mydsl.myDsl.Css;
import org.xtext.example.mydsl.myDsl.Descriptor;
import org.xtext.example.mydsl.myDsl.Directory;
import org.xtext.example.mydsl.myDsl.Domain;
import org.xtext.example.mydsl.myDsl.Eclass;
import org.xtext.example.mydsl.myDsl.Einterface;
import org.xtext.example.mydsl.myDsl.EntityName;
import org.xtext.example.mydsl.myDsl.Epackage;
import org.xtext.example.mydsl.myDsl.File;
import org.xtext.example.mydsl.myDsl.Functionality;
import org.xtext.example.mydsl.myDsl.GeneralEntity;
import org.xtext.example.mydsl.myDsl.GenericClass;
import org.xtext.example.mydsl.myDsl.JavaApp;
import org.xtext.example.mydsl.myDsl.JeeProject;
import org.xtext.example.mydsl.myDsl.Js;
import org.xtext.example.mydsl.myDsl.JsMethod;
import org.xtext.example.mydsl.myDsl.JsMethodArgs;
import org.xtext.example.mydsl.myDsl.JsModule;
import org.xtext.example.mydsl.myDsl.Json;
import org.xtext.example.mydsl.myDsl.Layer;
import org.xtext.example.mydsl.myDsl.LayerSegment;
import org.xtext.example.mydsl.myDsl.LayerSegmentRelation;
import org.xtext.example.mydsl.myDsl.Library;
import org.xtext.example.mydsl.myDsl.Md;
import org.xtext.example.mydsl.myDsl.MethodBack;
import org.xtext.example.mydsl.myDsl.MyDslFactory;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.NativeClass;
import org.xtext.example.mydsl.myDsl.Operateson;
import org.xtext.example.mydsl.myDsl.Operation;
import org.xtext.example.mydsl.myDsl.Property;
import org.xtext.example.mydsl.myDsl.ReactApp;
import org.xtext.example.mydsl.myDsl.Reducer;
import org.xtext.example.mydsl.myDsl.RelationArch;
import org.xtext.example.mydsl.myDsl.RelationDom;
import org.xtext.example.mydsl.myDsl.RouterComponent;
import org.xtext.example.mydsl.myDsl.ServiceFront;
import org.xtext.example.mydsl.myDsl.SpecialEntity;
import org.xtext.example.mydsl.myDsl.State;
import org.xtext.example.mydsl.myDsl.SublayerSegment;
import org.xtext.example.mydsl.myDsl.Submodule;
import org.xtext.example.mydsl.myDsl.Subproject;
import org.xtext.example.mydsl.myDsl.Technology;
import org.xtext.example.mydsl.myDsl.Transaction;
import org.xtext.example.mydsl.myDsl.Type;
import org.xtext.example.mydsl.myDsl.UIComponent;
import org.xtext.example.mydsl.myDsl.Visualizer;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.SYSTEM: return createSystem();
      case MyDslPackage.DOMAIN: return createDomain();
      case MyDslPackage.MODULE: return createModule();
      case MyDslPackage.SUBMODULE: return createSubmodule();
      case MyDslPackage.OPERATION: return createOperation();
      case MyDslPackage.ENTITY_NAME: return createEntityName();
      case MyDslPackage.GENERAL_ENTITY: return createGeneralEntity();
      case MyDslPackage.PROPERTY: return createProperty();
      case MyDslPackage.TYPE: return createType();
      case MyDslPackage.SPECIAL_ENTITY: return createSpecialEntity();
      case MyDslPackage.TRANSACTION: return createTransaction();
      case MyDslPackage.OPERATESON: return createOperateson();
      case MyDslPackage.RELATION_DOM: return createRelationDom();
      case MyDslPackage.ARCHITECTURE: return createArchitecture();
      case MyDslPackage.COMPONENT: return createComponent();
      case MyDslPackage.LAYER: return createLayer();
      case MyDslPackage.LAYER_SEGMENT: return createLayerSegment();
      case MyDslPackage.LAYER_SEGMENT_RELATION: return createLayerSegmentRelation();
      case MyDslPackage.SUBLAYER_SEGMENT: return createSublayerSegment();
      case MyDslPackage.RELATION_ARCH: return createRelationArch();
      case MyDslPackage.TECHNOLOGY: return createTechnology();
      case MyDslPackage.JAVA_APP: return createJavaApp();
      case MyDslPackage.JEE_PROJECT: return createJeeProject();
      case MyDslPackage.SUBPROJECT: return createSubproject();
      case MyDslPackage.ABSTRACT_CLASS: return createAbstractClass();
      case MyDslPackage.GENERIC_CLASS: return createGenericClass();
      case MyDslPackage.EINTERFACE: return createEinterface();
      case MyDslPackage.NATIVE_CLASS: return createNativeClass();
      case MyDslPackage.ECLASS: return createEclass();
      case MyDslPackage.ATTRIBUTE: return createAttribute();
      case MyDslPackage.EPACKAGE: return createEpackage();
      case MyDslPackage.METHOD_BACK: return createMethodBack();
      case MyDslPackage.ABSTRACT_METHOD: return createAbstractMethod();
      case MyDslPackage.DESCRIPTOR: return createDescriptor();
      case MyDslPackage.ANNOTATION: return createAnnotation();
      case MyDslPackage.LIBRARY: return createLibrary();
      case MyDslPackage.ABSTRACT_FRONT_ELEMENT: return createAbstractFrontElement();
      case MyDslPackage.REACT_APP: return createReactApp();
      case MyDslPackage.FUNCTIONALITY: return createFunctionality();
      case MyDslPackage.ROUTER_COMPONENT: return createRouterComponent();
      case MyDslPackage.UI_COMPONENT: return createUIComponent();
      case MyDslPackage.CONTAINER: return createContainer();
      case MyDslPackage.VISUALIZER: return createVisualizer();
      case MyDslPackage.SERVICE_FRONT: return createServiceFront();
      case MyDslPackage.DIRECTORY: return createDirectory();
      case MyDslPackage.FILE: return createFile();
      case MyDslPackage.MD: return createMd();
      case MyDslPackage.JS: return createJs();
      case MyDslPackage.JSON: return createJson();
      case MyDslPackage.CSS: return createCss();
      case MyDslPackage.STATE: return createState();
      case MyDslPackage.ACTION: return createAction();
      case MyDslPackage.ACTION_CREATOR: return createActionCreator();
      case MyDslPackage.ACTION_DISPATCHER: return createActionDispatcher();
      case MyDslPackage.REDUCER: return createReducer();
      case MyDslPackage.JS_MODULE: return createJsModule();
      case MyDslPackage.JS_METHOD: return createJsMethod();
      case MyDslPackage.JS_METHOD_ARGS: return createJsMethodArgs();
      case MyDslPackage.AXIOS_REQUEST: return createAxiosRequest();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.System createSystem()
  {
    SystemImpl system = new SystemImpl();
    return system;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domain createDomain()
  {
    DomainImpl domain = new DomainImpl();
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.Module createModule()
  {
    ModuleImpl module = new ModuleImpl();
    return module;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Submodule createSubmodule()
  {
    SubmoduleImpl submodule = new SubmoduleImpl();
    return submodule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Operation createOperation()
  {
    OperationImpl operation = new OperationImpl();
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityName createEntityName()
  {
    EntityNameImpl entityName = new EntityNameImpl();
    return entityName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GeneralEntity createGeneralEntity()
  {
    GeneralEntityImpl generalEntity = new GeneralEntityImpl();
    return generalEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpecialEntity createSpecialEntity()
  {
    SpecialEntityImpl specialEntity = new SpecialEntityImpl();
    return specialEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Transaction createTransaction()
  {
    TransactionImpl transaction = new TransactionImpl();
    return transaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Operateson createOperateson()
  {
    OperatesonImpl operateson = new OperatesonImpl();
    return operateson;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationDom createRelationDom()
  {
    RelationDomImpl relationDom = new RelationDomImpl();
    return relationDom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Architecture createArchitecture()
  {
    ArchitectureImpl architecture = new ArchitectureImpl();
    return architecture;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Component createComponent()
  {
    ComponentImpl component = new ComponentImpl();
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Layer createLayer()
  {
    LayerImpl layer = new LayerImpl();
    return layer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerSegment createLayerSegment()
  {
    LayerSegmentImpl layerSegment = new LayerSegmentImpl();
    return layerSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerSegmentRelation createLayerSegmentRelation()
  {
    LayerSegmentRelationImpl layerSegmentRelation = new LayerSegmentRelationImpl();
    return layerSegmentRelation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SublayerSegment createSublayerSegment()
  {
    SublayerSegmentImpl sublayerSegment = new SublayerSegmentImpl();
    return sublayerSegment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationArch createRelationArch()
  {
    RelationArchImpl relationArch = new RelationArchImpl();
    return relationArch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Technology createTechnology()
  {
    TechnologyImpl technology = new TechnologyImpl();
    return technology;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaApp createJavaApp()
  {
    JavaAppImpl javaApp = new JavaAppImpl();
    return javaApp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JeeProject createJeeProject()
  {
    JeeProjectImpl jeeProject = new JeeProjectImpl();
    return jeeProject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Subproject createSubproject()
  {
    SubprojectImpl subproject = new SubprojectImpl();
    return subproject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractClass createAbstractClass()
  {
    AbstractClassImpl abstractClass = new AbstractClassImpl();
    return abstractClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GenericClass createGenericClass()
  {
    GenericClassImpl genericClass = new GenericClassImpl();
    return genericClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Einterface createEinterface()
  {
    EinterfaceImpl einterface = new EinterfaceImpl();
    return einterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NativeClass createNativeClass()
  {
    NativeClassImpl nativeClass = new NativeClassImpl();
    return nativeClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Eclass createEclass()
  {
    EclassImpl eclass = new EclassImpl();
    return eclass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Epackage createEpackage()
  {
    EpackageImpl epackage = new EpackageImpl();
    return epackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodBack createMethodBack()
  {
    MethodBackImpl methodBack = new MethodBackImpl();
    return methodBack;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractMethod createAbstractMethod()
  {
    AbstractMethodImpl abstractMethod = new AbstractMethodImpl();
    return abstractMethod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Descriptor createDescriptor()
  {
    DescriptorImpl descriptor = new DescriptorImpl();
    return descriptor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Annotation createAnnotation()
  {
    AnnotationImpl annotation = new AnnotationImpl();
    return annotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Library createLibrary()
  {
    LibraryImpl library = new LibraryImpl();
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractFrontElement createAbstractFrontElement()
  {
    AbstractFrontElementImpl abstractFrontElement = new AbstractFrontElementImpl();
    return abstractFrontElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactApp createReactApp()
  {
    ReactAppImpl reactApp = new ReactAppImpl();
    return reactApp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Functionality createFunctionality()
  {
    FunctionalityImpl functionality = new FunctionalityImpl();
    return functionality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RouterComponent createRouterComponent()
  {
    RouterComponentImpl routerComponent = new RouterComponentImpl();
    return routerComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UIComponent createUIComponent()
  {
    UIComponentImpl uiComponent = new UIComponentImpl();
    return uiComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.Container createContainer()
  {
    ContainerImpl container = new ContainerImpl();
    return container;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Visualizer createVisualizer()
  {
    VisualizerImpl visualizer = new VisualizerImpl();
    return visualizer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ServiceFront createServiceFront()
  {
    ServiceFrontImpl serviceFront = new ServiceFrontImpl();
    return serviceFront;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Directory createDirectory()
  {
    DirectoryImpl directory = new DirectoryImpl();
    return directory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public File createFile()
  {
    FileImpl file = new FileImpl();
    return file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Md createMd()
  {
    MdImpl md = new MdImpl();
    return md;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Js createJs()
  {
    JsImpl js = new JsImpl();
    return js;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Json createJson()
  {
    JsonImpl json = new JsonImpl();
    return json;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Css createCss()
  {
    CssImpl css = new CssImpl();
    return css;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public State createState()
  {
    StateImpl state = new StateImpl();
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActionCreator createActionCreator()
  {
    ActionCreatorImpl actionCreator = new ActionCreatorImpl();
    return actionCreator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActionDispatcher createActionDispatcher()
  {
    ActionDispatcherImpl actionDispatcher = new ActionDispatcherImpl();
    return actionDispatcher;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reducer createReducer()
  {
    ReducerImpl reducer = new ReducerImpl();
    return reducer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsModule createJsModule()
  {
    JsModuleImpl jsModule = new JsModuleImpl();
    return jsModule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsMethod createJsMethod()
  {
    JsMethodImpl jsMethod = new JsMethodImpl();
    return jsMethod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsMethodArgs createJsMethodArgs()
  {
    JsMethodArgsImpl jsMethodArgs = new JsMethodArgsImpl();
    return jsMethodArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AxiosRequest createAxiosRequest()
  {
    AxiosRequestImpl axiosRequest = new AxiosRequestImpl();
    return axiosRequest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
