/**
 * generated by Xtext 2.18.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.AxiosRequest;
import org.xtext.example.mydsl.myDsl.JsMethodArgs;
import org.xtext.example.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Axios Request</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AxiosRequestImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AxiosRequestImpl#getAxiosRestMethod <em>Axios Rest Method</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AxiosRequestImpl#getUrl <em>Url</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AxiosRequestImpl#getData <em>Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AxiosRequestImpl extends AbstractFrontElementImpl implements AxiosRequest
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getAxiosRestMethod() <em>Axios Rest Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAxiosRestMethod()
   * @generated
   * @ordered
   */
  protected static final String AXIOS_REST_METHOD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAxiosRestMethod() <em>Axios Rest Method</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAxiosRestMethod()
   * @generated
   * @ordered
   */
  protected String axiosRestMethod = AXIOS_REST_METHOD_EDEFAULT;

  /**
   * The default value of the '{@link #getUrl() <em>Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrl()
   * @generated
   * @ordered
   */
  protected static final String URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUrl() <em>Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrl()
   * @generated
   * @ordered
   */
  protected String url = URL_EDEFAULT;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected JsMethodArgs data;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AxiosRequestImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.AXIOS_REQUEST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AXIOS_REQUEST__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAxiosRestMethod()
  {
    return axiosRestMethod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAxiosRestMethod(String newAxiosRestMethod)
  {
    String oldAxiosRestMethod = axiosRestMethod;
    axiosRestMethod = newAxiosRestMethod;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AXIOS_REQUEST__AXIOS_REST_METHOD, oldAxiosRestMethod, axiosRestMethod));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUrl()
  {
    return url;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUrl(String newUrl)
  {
    String oldUrl = url;
    url = newUrl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AXIOS_REQUEST__URL, oldUrl, url));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsMethodArgs getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(JsMethodArgs newData, NotificationChain msgs)
  {
    JsMethodArgs oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.AXIOS_REQUEST__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setData(JsMethodArgs newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.AXIOS_REQUEST__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.AXIOS_REQUEST__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AXIOS_REQUEST__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.AXIOS_REQUEST__DATA:
        return basicSetData(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.AXIOS_REQUEST__NAME:
        return getName();
      case MyDslPackage.AXIOS_REQUEST__AXIOS_REST_METHOD:
        return getAxiosRestMethod();
      case MyDslPackage.AXIOS_REQUEST__URL:
        return getUrl();
      case MyDslPackage.AXIOS_REQUEST__DATA:
        return getData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.AXIOS_REQUEST__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.AXIOS_REQUEST__AXIOS_REST_METHOD:
        setAxiosRestMethod((String)newValue);
        return;
      case MyDslPackage.AXIOS_REQUEST__URL:
        setUrl((String)newValue);
        return;
      case MyDslPackage.AXIOS_REQUEST__DATA:
        setData((JsMethodArgs)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.AXIOS_REQUEST__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.AXIOS_REQUEST__AXIOS_REST_METHOD:
        setAxiosRestMethod(AXIOS_REST_METHOD_EDEFAULT);
        return;
      case MyDslPackage.AXIOS_REQUEST__URL:
        setUrl(URL_EDEFAULT);
        return;
      case MyDslPackage.AXIOS_REQUEST__DATA:
        setData((JsMethodArgs)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.AXIOS_REQUEST__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.AXIOS_REQUEST__AXIOS_REST_METHOD:
        return AXIOS_REST_METHOD_EDEFAULT == null ? axiosRestMethod != null : !AXIOS_REST_METHOD_EDEFAULT.equals(axiosRestMethod);
      case MyDslPackage.AXIOS_REQUEST__URL:
        return URL_EDEFAULT == null ? url != null : !URL_EDEFAULT.equals(url);
      case MyDslPackage.AXIOS_REQUEST__DATA:
        return data != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", axiosRestMethod: ");
    result.append(axiosRestMethod);
    result.append(", url: ");
    result.append(url);
    result.append(')');
    return result.toString();
  }

} //AxiosRequestImpl
